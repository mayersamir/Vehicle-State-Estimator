
SerialCommunication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  000012f0  00001384  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  00800082  00800082  000013a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000320  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002287  00000000  00000000  00001734  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d88  00000000  00000000  000039bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001fc4  00000000  00000000  00004743  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c34  00000000  00000000  00006708  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001245  00000000  00000000  0000733c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a02  00000000  00000000  00008581  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  00009f83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 0b 04 	jmp	0x816	; 0x816 <__vector_12>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ef       	ldi	r30, 0xF0	; 240
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 39       	cpi	r26, 0x99	; 153
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 2a 01 	call	0x254	; 0x254 <main>
      8a:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Measurement_Init>:
 * Function : Measurement_Init
 * Description: this function is to initialize the Measurement ECU 
 * @return void
 */
void Measurement_Init()
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	TimerOneSecond_Flag = FALSE;
      9a:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <TimerOneSecond_Flag>
	Distance = FALSE;
      9e:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <Distance>
	Speed = FALSE;
      a2:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <Speed>
      a6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <Speed+0x1>
      aa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <Speed+0x2>
      ae:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <Speed+0x3>
	Time_Init = FALSE;
      b2:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <Time_Init>
	SPI_Init(&SPI_Cfg_s);
      b6:	80 e6       	ldi	r24, 0x60	; 96
      b8:	90 e0       	ldi	r25, 0x00	; 0
      ba:	0e 94 c6 02 	call	0x58c	; 0x58c <SPI_Init>
	UART_Init(&UART_Cfg_s);
      be:	84 e7       	ldi	r24, 0x74	; 116
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	0e 94 7c 07 	call	0xef8	; 0xef8 <UART_Init>
	Timers_Init(&timer1_cfg_s);
      c6:	89 e6       	ldi	r24, 0x69	; 105
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	0e 94 5e 04 	call	0x8bc	; 0x8bc <Timers_Init>
	pushButton_Init(pushButton0);
      ce:	80 e1       	ldi	r24, 0x10	; 16
      d0:	0e 94 c9 00 	call	0x192	; 0x192 <pushButton_Init>
	pushButton_Init(pushButton1);
      d4:	84 e0       	ldi	r24, 0x04	; 4
      d6:	0e 94 c9 00 	call	0x192	; 0x192 <pushButton_Init>
}
      da:	00 00       	nop
      dc:	df 91       	pop	r29
      de:	cf 91       	pop	r28
      e0:	08 95       	ret

000000e2 <Measurement_Calc>:
 * Function : Measurement_Calc
 * Description: this function is to Start the Measurement and update the result
 * @return void
 */
void Measurement_Calc()
{
      e2:	cf 93       	push	r28
      e4:	df 93       	push	r29
      e6:	cd b7       	in	r28, 0x3d	; 61
      e8:	de b7       	in	r29, 0x3e	; 62
	static uint8 Button_Flag = FALSE;
	if( pushButton_Get_Status(pushButton0))
      ea:	80 e1       	ldi	r24, 0x10	; 16
      ec:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <pushButton_Get_Status>
      f0:	88 23       	and	r24, r24
      f2:	41 f0       	breq	.+16     	; 0x104 <Measurement_Calc+0x22>
	{
		Button_Flag = TRUE;
      f4:	81 e0       	ldi	r24, 0x01	; 1
      f6:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__data_end>
		Timers_Start(TIMER1);
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	0e 94 0a 07 	call	0xe14	; 0xe14 <Timers_Start>
		Distance = 0;
     100:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <Distance>
	}
	
	if( pushButton_Get_Status(pushButton1))
     104:	84 e0       	ldi	r24, 0x04	; 4
     106:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <pushButton_Get_Status>
     10a:	88 23       	and	r24, r24
     10c:	11 f0       	breq	.+4      	; 0x112 <Measurement_Calc+0x30>
	{
		Button_Flag = FALSE;
     10e:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end>
	}

	if( Count_Flag  && Button_Flag && (TimerOneSecond_Flag < MAX_ONESECOND) )
     112:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Count_Flag>
     116:	90 91 88 00 	lds	r25, 0x0088	; 0x800088 <Count_Flag+0x1>
     11a:	89 2b       	or	r24, r25
     11c:	d9 f0       	breq	.+54     	; 0x154 <Measurement_Calc+0x72>
     11e:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end>
     122:	88 23       	and	r24, r24
     124:	b9 f0       	breq	.+46     	; 0x154 <Measurement_Calc+0x72>
     126:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <TimerOneSecond_Flag>
     12a:	83 30       	cpi	r24, 0x03	; 3
     12c:	98 f4       	brcc	.+38     	; 0x154 <Measurement_Calc+0x72>
	{
		Distance  += Speed;
     12e:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <Speed>
     132:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <Speed+0x1>
     136:	a0 91 85 00 	lds	r26, 0x0085	; 0x800085 <Speed+0x2>
     13a:	b0 91 86 00 	lds	r27, 0x0086	; 0x800086 <Speed+0x3>
     13e:	98 2f       	mov	r25, r24
     140:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <Distance>
     144:	89 0f       	add	r24, r25
     146:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <Distance>
		TimerOneSecond_Flag++;
     14a:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <TimerOneSecond_Flag>
     14e:	8f 5f       	subi	r24, 0xFF	; 255
     150:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <TimerOneSecond_Flag>
	}

}
     154:	00 00       	nop
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
     15a:	08 95       	ret

0000015c <Measurement_Send>:
 * Function : Measurement_Send
 * Description: This function is to Send the Measurement To PC through TTL UART 
 * @return void
 */
void Measurement_Send()
{
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
	if(TimerOneSecond_Flag < 3)
     164:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <TimerOneSecond_Flag>
     168:	83 30       	cpi	r24, 0x03	; 3
     16a:	78 f4       	brcc	.+30     	; 0x18a <Measurement_Send+0x2e>
	{
		UART_SendToTTL(Distance);
     16c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <Distance>
     170:	88 2f       	mov	r24, r24
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	a0 e0       	ldi	r26, 0x00	; 0
     176:	b0 e0       	ldi	r27, 0x00	; 0
     178:	bc 01       	movw	r22, r24
     17a:	cd 01       	movw	r24, r26
     17c:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_SendToTTL>
		TimerOneSecond_Flag++;
     180:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <TimerOneSecond_Flag>
     184:	8f 5f       	subi	r24, 0xFF	; 255
     186:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <TimerOneSecond_Flag>
	}
	else
	{
		//Do nothing
	}
}
     18a:	00 00       	nop
     18c:	df 91       	pop	r29
     18e:	cf 91       	pop	r28
     190:	08 95       	ret

00000192 <pushButton_Init>:
/**
 * Description: Function to Initiate the Push Button.
 * @param push_Button the number of the pushButton [pushButton0,pushButton1]
 */
void pushButton_Init(pushButton push_Button)
{
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
     196:	1f 92       	push	r1
     198:	cd b7       	in	r28, 0x3d	; 61
     19a:	de b7       	in	r29, 0x3e	; 62
     19c:	89 83       	std	Y+1, r24	; 0x01
	switch(push_Button)
     19e:	89 81       	ldd	r24, Y+1	; 0x01
     1a0:	88 2f       	mov	r24, r24
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	84 30       	cpi	r24, 0x04	; 4
     1a6:	91 05       	cpc	r25, r1
     1a8:	49 f0       	breq	.+18     	; 0x1bc <pushButton_Init+0x2a>
     1aa:	40 97       	sbiw	r24, 0x10	; 16
     1ac:	09 f0       	breq	.+2      	; 0x1b0 <pushButton_Init+0x1e>
			break;
		case pushButton1 :
			Gpio_PinDirection(pushButton1_PORT,pushButton1_PIN,SET_IN);
			break;
	}
}
     1ae:	0c c0       	rjmp	.+24     	; 0x1c8 <pushButton_Init+0x36>
void pushButton_Init(pushButton push_Button)
{
	switch(push_Button)
	{
		case pushButton0 :
			Gpio_PinDirection(pushButton0_PORT,pushButton0_PIN,SET_IN);
     1b0:	40 e0       	ldi	r20, 0x00	; 0
     1b2:	64 e0       	ldi	r22, 0x04	; 4
     1b4:	82 e0       	ldi	r24, 0x02	; 2
     1b6:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
			break;
     1ba:	06 c0       	rjmp	.+12     	; 0x1c8 <pushButton_Init+0x36>
		case pushButton1 :
			Gpio_PinDirection(pushButton1_PORT,pushButton1_PIN,SET_IN);
     1bc:	40 e0       	ldi	r20, 0x00	; 0
     1be:	62 e0       	ldi	r22, 0x02	; 2
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
			break;
     1c6:	00 00       	nop
	}
}
     1c8:	00 00       	nop
     1ca:	0f 90       	pop	r0
     1cc:	df 91       	pop	r29
     1ce:	cf 91       	pop	r28
     1d0:	08 95       	ret

000001d2 <pushButton_Get_Status>:
 * Description: Function to get the status of the Push button(Value).
 * @param push_Button the number of the push button [pushButton0,pushButton1]
 * @return the value(state) of the push button
 */
uint8 pushButton_Get_Status(pushButton push_Button)
{
     1d2:	cf 93       	push	r28
     1d4:	df 93       	push	r29
     1d6:	00 d0       	rcall	.+0      	; 0x1d8 <pushButton_Get_Status+0x6>
     1d8:	00 d0       	rcall	.+0      	; 0x1da <pushButton_Get_Status+0x8>
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	8c 83       	std	Y+4, r24	; 0x04
	sint8 result0 = NO_CHANGE,result1,result2;
     1e0:	8f ef       	ldi	r24, 0xFF	; 255
     1e2:	89 83       	std	Y+1, r24	; 0x01
	switch(push_Button)
     1e4:	8c 81       	ldd	r24, Y+4	; 0x04
     1e6:	88 2f       	mov	r24, r24
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	84 30       	cpi	r24, 0x04	; 4
     1ec:	91 05       	cpc	r25, r1
     1ee:	b1 f0       	breq	.+44     	; 0x21c <pushButton_Get_Status+0x4a>
     1f0:	40 97       	sbiw	r24, 0x10	; 16
     1f2:	41 f5       	brne	.+80     	; 0x244 <pushButton_Get_Status+0x72>
	{
		case pushButton0 :
			result1 = Gpio_PinRead(pushButton0_PORT,pushButton0_PIN);
     1f4:	64 e0       	ldi	r22, 0x04	; 4
     1f6:	82 e0       	ldi	r24, 0x02	; 2
     1f8:	0e 94 4f 02 	call	0x49e	; 0x49e <Gpio_PinRead>
     1fc:	8a 83       	std	Y+2, r24	; 0x02
			result2 = Gpio_PinRead(pushButton0_PORT,pushButton0_PIN);
     1fe:	64 e0       	ldi	r22, 0x04	; 4
     200:	82 e0       	ldi	r24, 0x02	; 2
     202:	0e 94 4f 02 	call	0x49e	; 0x49e <Gpio_PinRead>
     206:	8b 83       	std	Y+3, r24	; 0x03
			if(result1 == result2)
     208:	9a 81       	ldd	r25, Y+2	; 0x02
     20a:	8b 81       	ldd	r24, Y+3	; 0x03
     20c:	98 17       	cp	r25, r24
     20e:	19 f4       	brne	.+6      	; 0x216 <pushButton_Get_Status+0x44>
			{
				result0 = result1; 
     210:	8a 81       	ldd	r24, Y+2	; 0x02
     212:	89 83       	std	Y+1, r24	; 0x01
			}else
			{
				result0 = NO_CHANGE;
			}
			break;
     214:	17 c0       	rjmp	.+46     	; 0x244 <pushButton_Get_Status+0x72>
			if(result1 == result2)
			{
				result0 = result1; 
			}else
			{
				result0 = NO_CHANGE;
     216:	8f ef       	ldi	r24, 0xFF	; 255
     218:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
     21a:	14 c0       	rjmp	.+40     	; 0x244 <pushButton_Get_Status+0x72>
		case pushButton1 :
			result1 = Gpio_PinRead(pushButton1_PORT,pushButton1_PIN);
     21c:	62 e0       	ldi	r22, 0x02	; 2
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	0e 94 4f 02 	call	0x49e	; 0x49e <Gpio_PinRead>
     224:	8a 83       	std	Y+2, r24	; 0x02
			result2 = Gpio_PinRead(pushButton1_PORT,pushButton1_PIN);
     226:	62 e0       	ldi	r22, 0x02	; 2
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	0e 94 4f 02 	call	0x49e	; 0x49e <Gpio_PinRead>
     22e:	8b 83       	std	Y+3, r24	; 0x03
			if(result1 == result2)
     230:	9a 81       	ldd	r25, Y+2	; 0x02
     232:	8b 81       	ldd	r24, Y+3	; 0x03
     234:	98 17       	cp	r25, r24
     236:	19 f4       	brne	.+6      	; 0x23e <pushButton_Get_Status+0x6c>
			{
				result0 = result1;
     238:	8a 81       	ldd	r24, Y+2	; 0x02
     23a:	89 83       	std	Y+1, r24	; 0x01
			}else
			{
				result0 = NO_CHANGE;
			}
			break;
     23c:	02 c0       	rjmp	.+4      	; 0x242 <pushButton_Get_Status+0x70>
			if(result1 == result2)
			{
				result0 = result1;
			}else
			{
				result0 = NO_CHANGE;
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
     242:	00 00       	nop
	}
	return result0;
     244:	89 81       	ldd	r24, Y+1	; 0x01
     246:	0f 90       	pop	r0
     248:	0f 90       	pop	r0
     24a:	0f 90       	pop	r0
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <main>:

/************************************************************************/
/*                     Functions Implementation                        */
/************************************************************************/
int main(void)
{
     254:	cf 93       	push	r28
     256:	df 93       	push	r29
     258:	cd b7       	in	r28, 0x3d	; 61
     25a:	de b7       	in	r29, 0x3e	; 62
	Measurement_Init();
     25c:	0e 94 49 00 	call	0x92	; 0x92 <Measurement_Init>
	while (TRUE) 
    {
		Measurement_Calc();
     260:	0e 94 71 00 	call	0xe2	; 0xe2 <Measurement_Calc>
		Measurement_Send();
     264:	0e 94 ae 00 	call	0x15c	; 0x15c <Measurement_Send>
	}
     268:	fb cf       	rjmp	.-10     	; 0x260 <main+0xc>

0000026a <Gpio_PortDirection>:
		break;
		case MYPORTD :
		PORT_D ^= (pins);
		break;
	}
}
     26a:	cf 93       	push	r28
     26c:	df 93       	push	r29
     26e:	00 d0       	rcall	.+0      	; 0x270 <Gpio_PortDirection+0x6>
     270:	cd b7       	in	r28, 0x3d	; 61
     272:	de b7       	in	r29, 0x3e	; 62
     274:	89 83       	std	Y+1, r24	; 0x01
     276:	6a 83       	std	Y+2, r22	; 0x02
     278:	89 81       	ldd	r24, Y+1	; 0x01
     27a:	88 2f       	mov	r24, r24
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	81 30       	cpi	r24, 0x01	; 1
     280:	91 05       	cpc	r25, r1
     282:	91 f0       	breq	.+36     	; 0x2a8 <Gpio_PortDirection+0x3e>
     284:	82 30       	cpi	r24, 0x02	; 2
     286:	91 05       	cpc	r25, r1
     288:	1c f4       	brge	.+6      	; 0x290 <Gpio_PortDirection+0x26>
     28a:	89 2b       	or	r24, r25
     28c:	39 f0       	breq	.+14     	; 0x29c <Gpio_PortDirection+0x32>
     28e:	1e c0       	rjmp	.+60     	; 0x2cc <Gpio_PortDirection+0x62>
     290:	82 30       	cpi	r24, 0x02	; 2
     292:	91 05       	cpc	r25, r1
     294:	79 f0       	breq	.+30     	; 0x2b4 <Gpio_PortDirection+0x4a>
     296:	03 97       	sbiw	r24, 0x03	; 3
     298:	99 f0       	breq	.+38     	; 0x2c0 <Gpio_PortDirection+0x56>
     29a:	18 c0       	rjmp	.+48     	; 0x2cc <Gpio_PortDirection+0x62>
     29c:	8a e3       	ldi	r24, 0x3A	; 58
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	2a 81       	ldd	r18, Y+2	; 0x02
     2a2:	fc 01       	movw	r30, r24
     2a4:	20 83       	st	Z, r18
     2a6:	12 c0       	rjmp	.+36     	; 0x2cc <Gpio_PortDirection+0x62>
     2a8:	87 e3       	ldi	r24, 0x37	; 55
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	2a 81       	ldd	r18, Y+2	; 0x02
     2ae:	fc 01       	movw	r30, r24
     2b0:	20 83       	st	Z, r18
     2b2:	0c c0       	rjmp	.+24     	; 0x2cc <Gpio_PortDirection+0x62>
     2b4:	84 e3       	ldi	r24, 0x34	; 52
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	2a 81       	ldd	r18, Y+2	; 0x02
     2ba:	fc 01       	movw	r30, r24
     2bc:	20 83       	st	Z, r18
     2be:	06 c0       	rjmp	.+12     	; 0x2cc <Gpio_PortDirection+0x62>
     2c0:	81 e3       	ldi	r24, 0x31	; 49
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	2a 81       	ldd	r18, Y+2	; 0x02
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18
     2ca:	00 00       	nop
     2cc:	00 00       	nop
     2ce:	0f 90       	pop	r0
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <Gpio_PortWrite>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	00 d0       	rcall	.+0      	; 0x2de <Gpio_PortWrite+0x6>
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	6a 83       	std	Y+2, r22	; 0x02
     2e6:	89 81       	ldd	r24, Y+1	; 0x01
     2e8:	88 2f       	mov	r24, r24
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	81 30       	cpi	r24, 0x01	; 1
     2ee:	91 05       	cpc	r25, r1
     2f0:	91 f0       	breq	.+36     	; 0x316 <Gpio_PortWrite+0x3e>
     2f2:	82 30       	cpi	r24, 0x02	; 2
     2f4:	91 05       	cpc	r25, r1
     2f6:	1c f4       	brge	.+6      	; 0x2fe <Gpio_PortWrite+0x26>
     2f8:	89 2b       	or	r24, r25
     2fa:	39 f0       	breq	.+14     	; 0x30a <Gpio_PortWrite+0x32>
     2fc:	1e c0       	rjmp	.+60     	; 0x33a <Gpio_PortWrite+0x62>
     2fe:	82 30       	cpi	r24, 0x02	; 2
     300:	91 05       	cpc	r25, r1
     302:	79 f0       	breq	.+30     	; 0x322 <Gpio_PortWrite+0x4a>
     304:	03 97       	sbiw	r24, 0x03	; 3
     306:	99 f0       	breq	.+38     	; 0x32e <Gpio_PortWrite+0x56>
     308:	18 c0       	rjmp	.+48     	; 0x33a <Gpio_PortWrite+0x62>
     30a:	8b e3       	ldi	r24, 0x3B	; 59
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	2a 81       	ldd	r18, Y+2	; 0x02
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
     314:	12 c0       	rjmp	.+36     	; 0x33a <Gpio_PortWrite+0x62>
     316:	88 e3       	ldi	r24, 0x38	; 56
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	2a 81       	ldd	r18, Y+2	; 0x02
     31c:	fc 01       	movw	r30, r24
     31e:	20 83       	st	Z, r18
     320:	0c c0       	rjmp	.+24     	; 0x33a <Gpio_PortWrite+0x62>
     322:	85 e3       	ldi	r24, 0x35	; 53
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	2a 81       	ldd	r18, Y+2	; 0x02
     328:	fc 01       	movw	r30, r24
     32a:	20 83       	st	Z, r18
     32c:	06 c0       	rjmp	.+12     	; 0x33a <Gpio_PortWrite+0x62>
     32e:	82 e3       	ldi	r24, 0x32	; 50
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	2a 81       	ldd	r18, Y+2	; 0x02
     334:	fc 01       	movw	r30, r24
     336:	20 83       	st	Z, r18
     338:	00 00       	nop
     33a:	00 00       	nop
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <Gpio_PinDirection>:
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	00 d0       	rcall	.+0      	; 0x34c <Gpio_PinDirection+0x6>
     34c:	1f 92       	push	r1
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	89 83       	std	Y+1, r24	; 0x01
     354:	6a 83       	std	Y+2, r22	; 0x02
     356:	4b 83       	std	Y+3, r20	; 0x03
     358:	89 81       	ldd	r24, Y+1	; 0x01
     35a:	88 2f       	mov	r24, r24
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	81 30       	cpi	r24, 0x01	; 1
     360:	91 05       	cpc	r25, r1
     362:	81 f1       	breq	.+96     	; 0x3c4 <Gpio_PinDirection+0x7e>
     364:	82 30       	cpi	r24, 0x02	; 2
     366:	91 05       	cpc	r25, r1
     368:	1c f4       	brge	.+6      	; 0x370 <Gpio_PinDirection+0x2a>
     36a:	89 2b       	or	r24, r25
     36c:	49 f0       	breq	.+18     	; 0x380 <Gpio_PinDirection+0x3a>
     36e:	90 c0       	rjmp	.+288    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     370:	82 30       	cpi	r24, 0x02	; 2
     372:	91 05       	cpc	r25, r1
     374:	09 f4       	brne	.+2      	; 0x378 <Gpio_PinDirection+0x32>
     376:	48 c0       	rjmp	.+144    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     378:	03 97       	sbiw	r24, 0x03	; 3
     37a:	09 f4       	brne	.+2      	; 0x37e <Gpio_PinDirection+0x38>
     37c:	67 c0       	rjmp	.+206    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     37e:	88 c0       	rjmp	.+272    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     380:	8b 81       	ldd	r24, Y+3	; 0x03
     382:	88 2f       	mov	r24, r24
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	00 97       	sbiw	r24, 0x00	; 0
     388:	21 f0       	breq	.+8      	; 0x392 <Gpio_PinDirection+0x4c>
     38a:	8f 3f       	cpi	r24, 0xFF	; 255
     38c:	91 05       	cpc	r25, r1
     38e:	71 f0       	breq	.+28     	; 0x3ac <Gpio_PinDirection+0x66>
     390:	7f c0       	rjmp	.+254    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     392:	8a e3       	ldi	r24, 0x3A	; 58
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	2a e3       	ldi	r18, 0x3A	; 58
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	f9 01       	movw	r30, r18
     39c:	20 81       	ld	r18, Z
     39e:	32 2f       	mov	r19, r18
     3a0:	2a 81       	ldd	r18, Y+2	; 0x02
     3a2:	20 95       	com	r18
     3a4:	23 23       	and	r18, r19
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 83       	st	Z, r18
     3aa:	0b c0       	rjmp	.+22     	; 0x3c2 <Gpio_PinDirection+0x7c>
     3ac:	8a e3       	ldi	r24, 0x3A	; 58
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	2a e3       	ldi	r18, 0x3A	; 58
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	f9 01       	movw	r30, r18
     3b6:	30 81       	ld	r19, Z
     3b8:	2a 81       	ldd	r18, Y+2	; 0x02
     3ba:	23 2b       	or	r18, r19
     3bc:	fc 01       	movw	r30, r24
     3be:	20 83       	st	Z, r18
     3c0:	00 00       	nop
     3c2:	66 c0       	rjmp	.+204    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     3c4:	8b 81       	ldd	r24, Y+3	; 0x03
     3c6:	88 2f       	mov	r24, r24
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	00 97       	sbiw	r24, 0x00	; 0
     3cc:	21 f0       	breq	.+8      	; 0x3d6 <Gpio_PinDirection+0x90>
     3ce:	8f 3f       	cpi	r24, 0xFF	; 255
     3d0:	91 05       	cpc	r25, r1
     3d2:	71 f0       	breq	.+28     	; 0x3f0 <Gpio_PinDirection+0xaa>
     3d4:	5d c0       	rjmp	.+186    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     3d6:	87 e3       	ldi	r24, 0x37	; 55
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	27 e3       	ldi	r18, 0x37	; 55
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	f9 01       	movw	r30, r18
     3e0:	20 81       	ld	r18, Z
     3e2:	32 2f       	mov	r19, r18
     3e4:	2a 81       	ldd	r18, Y+2	; 0x02
     3e6:	20 95       	com	r18
     3e8:	23 23       	and	r18, r19
     3ea:	fc 01       	movw	r30, r24
     3ec:	20 83       	st	Z, r18
     3ee:	0b c0       	rjmp	.+22     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3f0:	87 e3       	ldi	r24, 0x37	; 55
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	27 e3       	ldi	r18, 0x37	; 55
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	f9 01       	movw	r30, r18
     3fa:	30 81       	ld	r19, Z
     3fc:	2a 81       	ldd	r18, Y+2	; 0x02
     3fe:	23 2b       	or	r18, r19
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18
     404:	00 00       	nop
     406:	44 c0       	rjmp	.+136    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     408:	8b 81       	ldd	r24, Y+3	; 0x03
     40a:	88 2f       	mov	r24, r24
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	00 97       	sbiw	r24, 0x00	; 0
     410:	21 f0       	breq	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     412:	8f 3f       	cpi	r24, 0xFF	; 255
     414:	91 05       	cpc	r25, r1
     416:	71 f0       	breq	.+28     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     418:	3b c0       	rjmp	.+118    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     41a:	84 e3       	ldi	r24, 0x34	; 52
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	24 e3       	ldi	r18, 0x34	; 52
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	f9 01       	movw	r30, r18
     424:	20 81       	ld	r18, Z
     426:	32 2f       	mov	r19, r18
     428:	2a 81       	ldd	r18, Y+2	; 0x02
     42a:	20 95       	com	r18
     42c:	23 23       	and	r18, r19
     42e:	fc 01       	movw	r30, r24
     430:	20 83       	st	Z, r18
     432:	0b c0       	rjmp	.+22     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     434:	84 e3       	ldi	r24, 0x34	; 52
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	24 e3       	ldi	r18, 0x34	; 52
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	f9 01       	movw	r30, r18
     43e:	30 81       	ld	r19, Z
     440:	2a 81       	ldd	r18, Y+2	; 0x02
     442:	23 2b       	or	r18, r19
     444:	fc 01       	movw	r30, r24
     446:	20 83       	st	Z, r18
     448:	00 00       	nop
     44a:	22 c0       	rjmp	.+68     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     44c:	8b 81       	ldd	r24, Y+3	; 0x03
     44e:	88 2f       	mov	r24, r24
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	00 97       	sbiw	r24, 0x00	; 0
     454:	21 f0       	breq	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     456:	8f 3f       	cpi	r24, 0xFF	; 255
     458:	91 05       	cpc	r25, r1
     45a:	71 f0       	breq	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     45c:	18 c0       	rjmp	.+48     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     45e:	81 e3       	ldi	r24, 0x31	; 49
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	21 e3       	ldi	r18, 0x31	; 49
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	f9 01       	movw	r30, r18
     468:	20 81       	ld	r18, Z
     46a:	32 2f       	mov	r19, r18
     46c:	2a 81       	ldd	r18, Y+2	; 0x02
     46e:	20 95       	com	r18
     470:	23 23       	and	r18, r19
     472:	fc 01       	movw	r30, r24
     474:	20 83       	st	Z, r18
     476:	0b c0       	rjmp	.+22     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     478:	81 e3       	ldi	r24, 0x31	; 49
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	21 e3       	ldi	r18, 0x31	; 49
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	f9 01       	movw	r30, r18
     482:	30 81       	ld	r19, Z
     484:	2a 81       	ldd	r18, Y+2	; 0x02
     486:	23 2b       	or	r18, r19
     488:	fc 01       	movw	r30, r24
     48a:	20 83       	st	Z, r18
     48c:	00 00       	nop
     48e:	00 00       	nop
     490:	00 00       	nop
     492:	0f 90       	pop	r0
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <Gpio_PinRead>:
 * @param port : the port that includes the pin {MYPORTA,MYPORTB,MYPORTC,MYPORTD}
 * @param pins : the pin Number {BIT0,BIT1,BIT2,BIT3,BIT4,BIT5,BIT6,BIT7}
 * Return : the value Read by the function 
 */
uint8 Gpio_PinRead(uint8 port, uint8 pin)
{
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	00 d0       	rcall	.+0      	; 0x4a4 <Gpio_PinRead+0x6>
     4a4:	1f 92       	push	r1
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
     4aa:	8a 83       	std	Y+2, r24	; 0x02
     4ac:	6b 83       	std	Y+3, r22	; 0x03
	uint8 result = 0;
     4ae:	19 82       	std	Y+1, r1	; 0x01
	switch(port)
     4b0:	8a 81       	ldd	r24, Y+2	; 0x02
     4b2:	88 2f       	mov	r24, r24
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	81 30       	cpi	r24, 0x01	; 1
     4b8:	91 05       	cpc	r25, r1
     4ba:	e9 f0       	breq	.+58     	; 0x4f6 <Gpio_PinRead+0x58>
     4bc:	82 30       	cpi	r24, 0x02	; 2
     4be:	91 05       	cpc	r25, r1
     4c0:	1c f4       	brge	.+6      	; 0x4c8 <Gpio_PinRead+0x2a>
     4c2:	89 2b       	or	r24, r25
     4c4:	39 f0       	breq	.+14     	; 0x4d4 <Gpio_PinRead+0x36>
     4c6:	4a c0       	rjmp	.+148    	; 0x55c <Gpio_PinRead+0xbe>
     4c8:	82 30       	cpi	r24, 0x02	; 2
     4ca:	91 05       	cpc	r25, r1
     4cc:	29 f1       	breq	.+74     	; 0x518 <Gpio_PinRead+0x7a>
     4ce:	03 97       	sbiw	r24, 0x03	; 3
     4d0:	a1 f1       	breq	.+104    	; 0x53a <Gpio_PinRead+0x9c>
     4d2:	44 c0       	rjmp	.+136    	; 0x55c <Gpio_PinRead+0xbe>
	{
		case MYPORTA :
		result = ((PIN_A >> pin) & 0x01);
     4d4:	89 e3       	ldi	r24, 0x39	; 57
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	fc 01       	movw	r30, r24
     4da:	80 81       	ld	r24, Z
     4dc:	88 2f       	mov	r24, r24
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	2b 81       	ldd	r18, Y+3	; 0x03
     4e2:	22 2f       	mov	r18, r18
     4e4:	30 e0       	ldi	r19, 0x00	; 0
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <Gpio_PinRead+0x4e>
     4e8:	95 95       	asr	r25
     4ea:	87 95       	ror	r24
     4ec:	2a 95       	dec	r18
     4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <Gpio_PinRead+0x4a>
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	89 83       	std	Y+1, r24	; 0x01
		break;
     4f4:	33 c0       	rjmp	.+102    	; 0x55c <Gpio_PinRead+0xbe>
		case MYPORTB :
		result = ((PIN_B >> pin) & 0x01);
     4f6:	86 e3       	ldi	r24, 0x36	; 54
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	fc 01       	movw	r30, r24
     4fc:	80 81       	ld	r24, Z
     4fe:	88 2f       	mov	r24, r24
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	2b 81       	ldd	r18, Y+3	; 0x03
     504:	22 2f       	mov	r18, r18
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	02 c0       	rjmp	.+4      	; 0x50e <Gpio_PinRead+0x70>
     50a:	95 95       	asr	r25
     50c:	87 95       	ror	r24
     50e:	2a 95       	dec	r18
     510:	e2 f7       	brpl	.-8      	; 0x50a <Gpio_PinRead+0x6c>
     512:	81 70       	andi	r24, 0x01	; 1
     514:	89 83       	std	Y+1, r24	; 0x01
		break;
     516:	22 c0       	rjmp	.+68     	; 0x55c <Gpio_PinRead+0xbe>
		case MYPORTC :
		result = ((PIN_C >> pin) & 0x01);
     518:	83 e3       	ldi	r24, 0x33	; 51
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	88 2f       	mov	r24, r24
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	2b 81       	ldd	r18, Y+3	; 0x03
     526:	22 2f       	mov	r18, r18
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	02 c0       	rjmp	.+4      	; 0x530 <Gpio_PinRead+0x92>
     52c:	95 95       	asr	r25
     52e:	87 95       	ror	r24
     530:	2a 95       	dec	r18
     532:	e2 f7       	brpl	.-8      	; 0x52c <Gpio_PinRead+0x8e>
     534:	81 70       	andi	r24, 0x01	; 1
     536:	89 83       	std	Y+1, r24	; 0x01
		break;
     538:	11 c0       	rjmp	.+34     	; 0x55c <Gpio_PinRead+0xbe>
		case MYPORTD :
		result = ((PIN_D >> pin) & 0x01);
     53a:	80 e3       	ldi	r24, 0x30	; 48
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	fc 01       	movw	r30, r24
     540:	80 81       	ld	r24, Z
     542:	88 2f       	mov	r24, r24
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	2b 81       	ldd	r18, Y+3	; 0x03
     548:	22 2f       	mov	r18, r18
     54a:	30 e0       	ldi	r19, 0x00	; 0
     54c:	02 c0       	rjmp	.+4      	; 0x552 <Gpio_PinRead+0xb4>
     54e:	95 95       	asr	r25
     550:	87 95       	ror	r24
     552:	2a 95       	dec	r18
     554:	e2 f7       	brpl	.-8      	; 0x54e <Gpio_PinRead+0xb0>
     556:	81 70       	andi	r24, 0x01	; 1
     558:	89 83       	std	Y+1, r24	; 0x01
		break;
     55a:	00 00       	nop
	}
	return result;
     55c:	89 81       	ldd	r24, Y+1	; 0x01
}
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	0f 90       	pop	r0
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	08 95       	ret

0000056a <Interrupts_On>:
     56a:	cf 93       	push	r28
     56c:	df 93       	push	r29
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	8f e5       	ldi	r24, 0x5F	; 95
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	2f e5       	ldi	r18, 0x5F	; 95
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	f9 01       	movw	r30, r18
     57c:	20 81       	ld	r18, Z
     57e:	20 68       	ori	r18, 0x80	; 128
     580:	fc 01       	movw	r30, r24
     582:	20 83       	st	Z, r18
     584:	00 00       	nop
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <SPI_Init>:
 */
uint8 SPI_Receive()
{
	while(GET_BIT(SPI_SPSR,SPIF) == FALSE);
	return SPI_SPDR;
}
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	00 d0       	rcall	.+0      	; 0x592 <SPI_Init+0x6>
     592:	1f 92       	push	r1
     594:	cd b7       	in	r28, 0x3d	; 61
     596:	de b7       	in	r29, 0x3e	; 62
     598:	9b 83       	std	Y+3, r25	; 0x03
     59a:	8a 83       	std	Y+2, r24	; 0x02
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	89 83       	std	Y+1, r24	; 0x01
     5a0:	8a 81       	ldd	r24, Y+2	; 0x02
     5a2:	9b 81       	ldd	r25, Y+3	; 0x03
     5a4:	fc 01       	movw	r30, r24
     5a6:	80 81       	ld	r24, Z
     5a8:	88 2f       	mov	r24, r24
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	00 97       	sbiw	r24, 0x00	; 0
     5ae:	d9 f0       	breq	.+54     	; 0x5e6 <SPI_Init+0x5a>
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	41 f5       	brne	.+80     	; 0x604 <SPI_Init+0x78>
     5b4:	4f ef       	ldi	r20, 0xFF	; 255
     5b6:	60 e1       	ldi	r22, 0x10	; 16
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
     5be:	4f ef       	ldi	r20, 0xFF	; 255
     5c0:	60 e2       	ldi	r22, 0x20	; 32
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
     5c8:	4f ef       	ldi	r20, 0xFF	; 255
     5ca:	60 e8       	ldi	r22, 0x80	; 128
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
     5d2:	8d e2       	ldi	r24, 0x2D	; 45
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	2d e2       	ldi	r18, 0x2D	; 45
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	f9 01       	movw	r30, r18
     5dc:	20 81       	ld	r18, Z
     5de:	20 61       	ori	r18, 0x10	; 16
     5e0:	fc 01       	movw	r30, r24
     5e2:	20 83       	st	Z, r18
     5e4:	11 c0       	rjmp	.+34     	; 0x608 <SPI_Init+0x7c>
     5e6:	4f ef       	ldi	r20, 0xFF	; 255
     5e8:	60 e4       	ldi	r22, 0x40	; 64
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	0e 94 a3 01 	call	0x346	; 0x346 <Gpio_PinDirection>
     5f0:	8d e2       	ldi	r24, 0x2D	; 45
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	2d e2       	ldi	r18, 0x2D	; 45
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	f9 01       	movw	r30, r18
     5fa:	20 81       	ld	r18, Z
     5fc:	2f 7e       	andi	r18, 0xEF	; 239
     5fe:	fc 01       	movw	r30, r24
     600:	20 83       	st	Z, r18
     602:	02 c0       	rjmp	.+4      	; 0x608 <SPI_Init+0x7c>
     604:	19 82       	std	Y+1, r1	; 0x01
     606:	00 00       	nop
     608:	8a 81       	ldd	r24, Y+2	; 0x02
     60a:	9b 81       	ldd	r25, Y+3	; 0x03
     60c:	fc 01       	movw	r30, r24
     60e:	81 81       	ldd	r24, Z+1	; 0x01
     610:	88 2f       	mov	r24, r24
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	00 97       	sbiw	r24, 0x00	; 0
     616:	19 f0       	breq	.+6      	; 0x61e <SPI_Init+0x92>
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	59 f0       	breq	.+22     	; 0x632 <SPI_Init+0xa6>
     61c:	14 c0       	rjmp	.+40     	; 0x646 <SPI_Init+0xba>
     61e:	8d e2       	ldi	r24, 0x2D	; 45
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	2d e2       	ldi	r18, 0x2D	; 45
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	f9 01       	movw	r30, r18
     628:	20 81       	ld	r18, Z
     62a:	27 7f       	andi	r18, 0xF7	; 247
     62c:	fc 01       	movw	r30, r24
     62e:	20 83       	st	Z, r18
     630:	0c c0       	rjmp	.+24     	; 0x64a <SPI_Init+0xbe>
     632:	8d e2       	ldi	r24, 0x2D	; 45
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	2d e2       	ldi	r18, 0x2D	; 45
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	f9 01       	movw	r30, r18
     63c:	20 81       	ld	r18, Z
     63e:	28 60       	ori	r18, 0x08	; 8
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18
     644:	02 c0       	rjmp	.+4      	; 0x64a <SPI_Init+0xbe>
     646:	19 82       	std	Y+1, r1	; 0x01
     648:	00 00       	nop
     64a:	8a 81       	ldd	r24, Y+2	; 0x02
     64c:	9b 81       	ldd	r25, Y+3	; 0x03
     64e:	fc 01       	movw	r30, r24
     650:	82 81       	ldd	r24, Z+2	; 0x02
     652:	88 2f       	mov	r24, r24
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	00 97       	sbiw	r24, 0x00	; 0
     658:	71 f0       	breq	.+28     	; 0x676 <SPI_Init+0xea>
     65a:	01 97       	sbiw	r24, 0x01	; 1
     65c:	b1 f4       	brne	.+44     	; 0x68a <SPI_Init+0xfe>
     65e:	8d e2       	ldi	r24, 0x2D	; 45
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	2d e2       	ldi	r18, 0x2D	; 45
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	f9 01       	movw	r30, r18
     668:	20 81       	ld	r18, Z
     66a:	20 68       	ori	r18, 0x80	; 128
     66c:	fc 01       	movw	r30, r24
     66e:	20 83       	st	Z, r18
     670:	0e 94 b5 02 	call	0x56a	; 0x56a <Interrupts_On>
     674:	0c c0       	rjmp	.+24     	; 0x68e <SPI_Init+0x102>
     676:	8d e2       	ldi	r24, 0x2D	; 45
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	2d e2       	ldi	r18, 0x2D	; 45
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	f9 01       	movw	r30, r18
     680:	20 81       	ld	r18, Z
     682:	2f 77       	andi	r18, 0x7F	; 127
     684:	fc 01       	movw	r30, r24
     686:	20 83       	st	Z, r18
     688:	02 c0       	rjmp	.+4      	; 0x68e <SPI_Init+0x102>
     68a:	19 82       	std	Y+1, r1	; 0x01
     68c:	00 00       	nop
     68e:	8a 81       	ldd	r24, Y+2	; 0x02
     690:	9b 81       	ldd	r25, Y+3	; 0x03
     692:	fc 01       	movw	r30, r24
     694:	83 81       	ldd	r24, Z+3	; 0x03
     696:	88 2f       	mov	r24, r24
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	00 97       	sbiw	r24, 0x00	; 0
     69c:	19 f0       	breq	.+6      	; 0x6a4 <SPI_Init+0x118>
     69e:	01 97       	sbiw	r24, 0x01	; 1
     6a0:	59 f0       	breq	.+22     	; 0x6b8 <SPI_Init+0x12c>
     6a2:	14 c0       	rjmp	.+40     	; 0x6cc <SPI_Init+0x140>
     6a4:	8d e2       	ldi	r24, 0x2D	; 45
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	2d e2       	ldi	r18, 0x2D	; 45
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	f9 01       	movw	r30, r18
     6ae:	20 81       	ld	r18, Z
     6b0:	2f 7d       	andi	r18, 0xDF	; 223
     6b2:	fc 01       	movw	r30, r24
     6b4:	20 83       	st	Z, r18
     6b6:	0c c0       	rjmp	.+24     	; 0x6d0 <SPI_Init+0x144>
     6b8:	8d e2       	ldi	r24, 0x2D	; 45
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	2d e2       	ldi	r18, 0x2D	; 45
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	f9 01       	movw	r30, r18
     6c2:	20 81       	ld	r18, Z
     6c4:	20 62       	ori	r18, 0x20	; 32
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18
     6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <SPI_Init+0x144>
     6cc:	19 82       	std	Y+1, r1	; 0x01
     6ce:	00 00       	nop
     6d0:	8a 81       	ldd	r24, Y+2	; 0x02
     6d2:	9b 81       	ldd	r25, Y+3	; 0x03
     6d4:	fc 01       	movw	r30, r24
     6d6:	84 81       	ldd	r24, Z+4	; 0x04
     6d8:	88 2f       	mov	r24, r24
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	00 97       	sbiw	r24, 0x00	; 0
     6de:	19 f0       	breq	.+6      	; 0x6e6 <SPI_Init+0x15a>
     6e0:	01 97       	sbiw	r24, 0x01	; 1
     6e2:	59 f0       	breq	.+22     	; 0x6fa <SPI_Init+0x16e>
     6e4:	14 c0       	rjmp	.+40     	; 0x70e <SPI_Init+0x182>
     6e6:	8d e2       	ldi	r24, 0x2D	; 45
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	2d e2       	ldi	r18, 0x2D	; 45
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	f9 01       	movw	r30, r18
     6f0:	20 81       	ld	r18, Z
     6f2:	2b 7f       	andi	r18, 0xFB	; 251
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18
     6f8:	0c c0       	rjmp	.+24     	; 0x712 <SPI_Init+0x186>
     6fa:	8d e2       	ldi	r24, 0x2D	; 45
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	2d e2       	ldi	r18, 0x2D	; 45
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	f9 01       	movw	r30, r18
     704:	20 81       	ld	r18, Z
     706:	24 60       	ori	r18, 0x04	; 4
     708:	fc 01       	movw	r30, r24
     70a:	20 83       	st	Z, r18
     70c:	02 c0       	rjmp	.+4      	; 0x712 <SPI_Init+0x186>
     70e:	19 82       	std	Y+1, r1	; 0x01
     710:	00 00       	nop
     712:	8a 81       	ldd	r24, Y+2	; 0x02
     714:	9b 81       	ldd	r25, Y+3	; 0x03
     716:	fc 01       	movw	r30, r24
     718:	85 81       	ldd	r24, Z+5	; 0x05
     71a:	88 2f       	mov	r24, r24
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	81 30       	cpi	r24, 0x01	; 1
     720:	91 05       	cpc	r25, r1
     722:	f9 f0       	breq	.+62     	; 0x762 <SPI_Init+0x1d6>
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	91 05       	cpc	r25, r1
     728:	1c f4       	brge	.+6      	; 0x730 <SPI_Init+0x1a4>
     72a:	89 2b       	or	r24, r25
     72c:	39 f0       	breq	.+14     	; 0x73c <SPI_Init+0x1b0>
     72e:	52 c0       	rjmp	.+164    	; 0x7d4 <SPI_Init+0x248>
     730:	82 30       	cpi	r24, 0x02	; 2
     732:	91 05       	cpc	r25, r1
     734:	49 f1       	breq	.+82     	; 0x788 <SPI_Init+0x1fc>
     736:	03 97       	sbiw	r24, 0x03	; 3
     738:	d1 f1       	breq	.+116    	; 0x7ae <SPI_Init+0x222>
     73a:	4c c0       	rjmp	.+152    	; 0x7d4 <SPI_Init+0x248>
     73c:	8d e2       	ldi	r24, 0x2D	; 45
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	2d e2       	ldi	r18, 0x2D	; 45
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	f9 01       	movw	r30, r18
     746:	20 81       	ld	r18, Z
     748:	2e 7f       	andi	r18, 0xFE	; 254
     74a:	fc 01       	movw	r30, r24
     74c:	20 83       	st	Z, r18
     74e:	8d e2       	ldi	r24, 0x2D	; 45
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	2d e2       	ldi	r18, 0x2D	; 45
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	f9 01       	movw	r30, r18
     758:	20 81       	ld	r18, Z
     75a:	2d 7f       	andi	r18, 0xFD	; 253
     75c:	fc 01       	movw	r30, r24
     75e:	20 83       	st	Z, r18
     760:	3b c0       	rjmp	.+118    	; 0x7d8 <SPI_Init+0x24c>
     762:	8d e2       	ldi	r24, 0x2D	; 45
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	2d e2       	ldi	r18, 0x2D	; 45
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	f9 01       	movw	r30, r18
     76c:	20 81       	ld	r18, Z
     76e:	21 60       	ori	r18, 0x01	; 1
     770:	fc 01       	movw	r30, r24
     772:	20 83       	st	Z, r18
     774:	8d e2       	ldi	r24, 0x2D	; 45
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	2d e2       	ldi	r18, 0x2D	; 45
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	f9 01       	movw	r30, r18
     77e:	20 81       	ld	r18, Z
     780:	2d 7f       	andi	r18, 0xFD	; 253
     782:	fc 01       	movw	r30, r24
     784:	20 83       	st	Z, r18
     786:	28 c0       	rjmp	.+80     	; 0x7d8 <SPI_Init+0x24c>
     788:	8d e2       	ldi	r24, 0x2D	; 45
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	2d e2       	ldi	r18, 0x2D	; 45
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	f9 01       	movw	r30, r18
     792:	20 81       	ld	r18, Z
     794:	2e 7f       	andi	r18, 0xFE	; 254
     796:	fc 01       	movw	r30, r24
     798:	20 83       	st	Z, r18
     79a:	8d e2       	ldi	r24, 0x2D	; 45
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	2d e2       	ldi	r18, 0x2D	; 45
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	f9 01       	movw	r30, r18
     7a4:	20 81       	ld	r18, Z
     7a6:	22 60       	ori	r18, 0x02	; 2
     7a8:	fc 01       	movw	r30, r24
     7aa:	20 83       	st	Z, r18
     7ac:	15 c0       	rjmp	.+42     	; 0x7d8 <SPI_Init+0x24c>
     7ae:	8d e2       	ldi	r24, 0x2D	; 45
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	2d e2       	ldi	r18, 0x2D	; 45
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	f9 01       	movw	r30, r18
     7b8:	20 81       	ld	r18, Z
     7ba:	21 60       	ori	r18, 0x01	; 1
     7bc:	fc 01       	movw	r30, r24
     7be:	20 83       	st	Z, r18
     7c0:	8d e2       	ldi	r24, 0x2D	; 45
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	2d e2       	ldi	r18, 0x2D	; 45
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	f9 01       	movw	r30, r18
     7ca:	20 81       	ld	r18, Z
     7cc:	22 60       	ori	r18, 0x02	; 2
     7ce:	fc 01       	movw	r30, r24
     7d0:	20 83       	st	Z, r18
     7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <SPI_Init+0x24c>
     7d4:	19 82       	std	Y+1, r1	; 0x01
     7d6:	00 00       	nop
     7d8:	8d e2       	ldi	r24, 0x2D	; 45
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	2d e2       	ldi	r18, 0x2D	; 45
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	f9 01       	movw	r30, r18
     7e2:	20 81       	ld	r18, Z
     7e4:	20 64       	ori	r18, 0x40	; 64
     7e6:	fc 01       	movw	r30, r24
     7e8:	20 83       	st	Z, r18
     7ea:	6f ef       	ldi	r22, 0xFF	; 255
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	0e 94 35 01 	call	0x26a	; 0x26a <Gpio_PortDirection>
     7f2:	89 81       	ldd	r24, Y+1	; 0x01
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	08 95       	ret

00000800 <SPI_Read>:
 * Description: this function is to Receive a data by the SPI 
 * @param data the symbol to be sent
 * @return the Received data
 */
uint8 SPI_Read()
{
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	cd b7       	in	r28, 0x3d	; 61
     806:	de b7       	in	r29, 0x3e	; 62
	return SPI_SPDR;
     808:	8f e2       	ldi	r24, 0x2F	; 47
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	fc 01       	movw	r30, r24
     80e:	80 81       	ld	r24, Z
}
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	08 95       	ret

00000816 <__vector_12>:


ISR_T(SPI_STC_vect)
{
     816:	1f 92       	push	r1
     818:	0f 92       	push	r0
     81a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     81e:	0f 92       	push	r0
     820:	11 24       	eor	r1, r1
     822:	2f 93       	push	r18
     824:	3f 93       	push	r19
     826:	4f 93       	push	r20
     828:	5f 93       	push	r21
     82a:	6f 93       	push	r22
     82c:	7f 93       	push	r23
     82e:	8f 93       	push	r24
     830:	9f 93       	push	r25
     832:	af 93       	push	r26
     834:	bf 93       	push	r27
     836:	ef 93       	push	r30
     838:	ff 93       	push	r31
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	cd b7       	in	r28, 0x3d	; 61
     840:	de b7       	in	r29, 0x3e	; 62
	Recived = SPI_Read();
     842:	0e 94 00 04 	call	0x800	; 0x800 <SPI_Read>
     846:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <Recived>
	Gpio_PortWrite(MYPORTA,Recived);
     84a:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     84e:	68 2f       	mov	r22, r24
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Gpio_PortWrite>
	/* This Block of code only once at the first send which is the init time */
	if(Count_Flag == FALSE)
     856:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Count_Flag>
     85a:	90 91 88 00 	lds	r25, 0x0088	; 0x800088 <Count_Flag+0x1>
     85e:	89 2b       	or	r24, r25
     860:	51 f4       	brne	.+20     	; 0x876 <__stack+0x17>
	{
	Time_Init = Recived ;
     862:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     866:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Time_Init>
	Count_Flag = TRUE;
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <Count_Flag+0x1>
     872:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <Count_Flag>
	}
	Speed = Recived;
     876:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     87a:	88 2f       	mov	r24, r24
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	a0 e0       	ldi	r26, 0x00	; 0
     880:	b0 e0       	ldi	r27, 0x00	; 0
     882:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <Speed>
     886:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <Speed+0x1>
     88a:	a0 93 85 00 	sts	0x0085, r26	; 0x800085 <Speed+0x2>
     88e:	b0 93 86 00 	sts	0x0086, r27	; 0x800086 <Speed+0x3>
     892:	00 00       	nop
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	ff 91       	pop	r31
     89a:	ef 91       	pop	r30
     89c:	bf 91       	pop	r27
     89e:	af 91       	pop	r26
     8a0:	9f 91       	pop	r25
     8a2:	8f 91       	pop	r24
     8a4:	7f 91       	pop	r23
     8a6:	6f 91       	pop	r22
     8a8:	5f 91       	pop	r21
     8aa:	4f 91       	pop	r20
     8ac:	3f 91       	pop	r19
     8ae:	2f 91       	pop	r18
     8b0:	0f 90       	pop	r0
     8b2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     8b6:	0f 90       	pop	r0
     8b8:	1f 90       	pop	r1
     8ba:	18 95       	reti

000008bc <Timers_Init>:
	{
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,TRUE);
		Timers_timer2_Delay_ns(time_On_ns);
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,FALSE);
		Timers_timer2_Delay_ns(time_Off_ns);
	}
     8bc:	cf 93       	push	r28
     8be:	df 93       	push	r29
     8c0:	00 d0       	rcall	.+0      	; 0x8c2 <Timers_Init+0x6>
     8c2:	1f 92       	push	r1
     8c4:	cd b7       	in	r28, 0x3d	; 61
     8c6:	de b7       	in	r29, 0x3e	; 62
     8c8:	9b 83       	std	Y+3, r25	; 0x03
     8ca:	8a 83       	std	Y+2, r24	; 0x02
     8cc:	19 82       	std	Y+1, r1	; 0x01
     8ce:	8a 81       	ldd	r24, Y+2	; 0x02
     8d0:	9b 81       	ldd	r25, Y+3	; 0x03
     8d2:	fc 01       	movw	r30, r24
     8d4:	87 81       	ldd	r24, Z+7	; 0x07
     8d6:	90 85       	ldd	r25, Z+8	; 0x08
     8d8:	a1 85       	ldd	r26, Z+9	; 0x09
     8da:	b2 85       	ldd	r27, Z+10	; 0x0a
     8dc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <Gv_F_CPU>
     8e0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <Gv_F_CPU+0x1>
     8e4:	a0 93 8c 00 	sts	0x008C, r26	; 0x80008c <Gv_F_CPU+0x2>
     8e8:	b0 93 8d 00 	sts	0x008D, r27	; 0x80008d <Gv_F_CPU+0x3>
     8ec:	8a 81       	ldd	r24, Y+2	; 0x02
     8ee:	9b 81       	ldd	r25, Y+3	; 0x03
     8f0:	fc 01       	movw	r30, r24
     8f2:	80 81       	ld	r24, Z
     8f4:	88 2f       	mov	r24, r24
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	81 30       	cpi	r24, 0x01	; 1
     8fa:	91 05       	cpc	r25, r1
     8fc:	09 f4       	brne	.+2      	; 0x900 <Timers_Init+0x44>
     8fe:	64 c0       	rjmp	.+200    	; 0x9c8 <Timers_Init+0x10c>
     900:	82 30       	cpi	r24, 0x02	; 2
     902:	91 05       	cpc	r25, r1
     904:	09 f4       	brne	.+2      	; 0x908 <Timers_Init+0x4c>
     906:	cc c0       	rjmp	.+408    	; 0xaa0 <Timers_Init+0x1e4>
     908:	89 2b       	or	r24, r25
     90a:	09 f0       	breq	.+2      	; 0x90e <Timers_Init+0x52>
     90c:	26 c1       	rjmp	.+588    	; 0xb5a <Timers_Init+0x29e>
     90e:	83 e5       	ldi	r24, 0x53	; 83
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	23 e5       	ldi	r18, 0x53	; 83
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	f9 01       	movw	r30, r18
     918:	40 81       	ld	r20, Z
     91a:	2a 81       	ldd	r18, Y+2	; 0x02
     91c:	3b 81       	ldd	r19, Y+3	; 0x03
     91e:	f9 01       	movw	r30, r18
     920:	21 81       	ldd	r18, Z+1	; 0x01
     922:	24 2b       	or	r18, r20
     924:	fc 01       	movw	r30, r24
     926:	20 83       	st	Z, r18
     928:	89 e5       	ldi	r24, 0x59	; 89
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	29 e5       	ldi	r18, 0x59	; 89
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	f9 01       	movw	r30, r18
     932:	40 81       	ld	r20, Z
     934:	2a 81       	ldd	r18, Y+2	; 0x02
     936:	3b 81       	ldd	r19, Y+3	; 0x03
     938:	f9 01       	movw	r30, r18
     93a:	26 81       	ldd	r18, Z+6	; 0x06
     93c:	24 2b       	or	r18, r20
     93e:	fc 01       	movw	r30, r24
     940:	20 83       	st	Z, r18
     942:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Gv_PrescallerTimer0_Mask>
     946:	88 2f       	mov	r24, r24
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	82 30       	cpi	r24, 0x02	; 2
     94c:	91 05       	cpc	r25, r1
     94e:	e9 f0       	breq	.+58     	; 0x98a <Timers_Init+0xce>
     950:	83 30       	cpi	r24, 0x03	; 3
     952:	91 05       	cpc	r25, r1
     954:	2c f4       	brge	.+10     	; 0x960 <Timers_Init+0xa4>
     956:	00 97       	sbiw	r24, 0x00	; 0
     958:	61 f0       	breq	.+24     	; 0x972 <Timers_Init+0xb6>
     95a:	01 97       	sbiw	r24, 0x01	; 1
     95c:	79 f0       	breq	.+30     	; 0x97c <Timers_Init+0xc0>
     95e:	31 c0       	rjmp	.+98     	; 0x9c2 <Timers_Init+0x106>
     960:	84 30       	cpi	r24, 0x04	; 4
     962:	91 05       	cpc	r25, r1
     964:	01 f1       	breq	.+64     	; 0x9a6 <Timers_Init+0xea>
     966:	84 30       	cpi	r24, 0x04	; 4
     968:	91 05       	cpc	r25, r1
     96a:	b4 f0       	brlt	.+44     	; 0x998 <Timers_Init+0xdc>
     96c:	05 97       	sbiw	r24, 0x05	; 5
     96e:	11 f1       	breq	.+68     	; 0x9b4 <Timers_Init+0xf8>
     970:	28 c0       	rjmp	.+80     	; 0x9c2 <Timers_Init+0x106>
     972:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     976:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     97a:	23 c0       	rjmp	.+70     	; 0x9c2 <Timers_Init+0x106>
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     984:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     988:	1c c0       	rjmp	.+56     	; 0x9c2 <Timers_Init+0x106>
     98a:	88 e0       	ldi	r24, 0x08	; 8
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     992:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     996:	15 c0       	rjmp	.+42     	; 0x9c2 <Timers_Init+0x106>
     998:	80 e4       	ldi	r24, 0x40	; 64
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     9a0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     9a4:	0e c0       	rjmp	.+28     	; 0x9c2 <Timers_Init+0x106>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	91 e0       	ldi	r25, 0x01	; 1
     9aa:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     9ae:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     9b2:	07 c0       	rjmp	.+14     	; 0x9c2 <Timers_Init+0x106>
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	94 e0       	ldi	r25, 0x04	; 4
     9b8:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     9bc:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     9c0:	00 00       	nop
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	89 83       	std	Y+1, r24	; 0x01
     9c6:	cb c0       	rjmp	.+406    	; 0xb5e <Timers_Init+0x2a2>
     9c8:	8f e4       	ldi	r24, 0x4F	; 79
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	2f e4       	ldi	r18, 0x4F	; 79
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	f9 01       	movw	r30, r18
     9d2:	20 81       	ld	r18, Z
     9d4:	42 2f       	mov	r20, r18
     9d6:	2a 81       	ldd	r18, Y+2	; 0x02
     9d8:	3b 81       	ldd	r19, Y+3	; 0x03
     9da:	f9 01       	movw	r30, r18
     9dc:	21 81       	ldd	r18, Z+1	; 0x01
     9de:	23 70       	andi	r18, 0x03	; 3
     9e0:	24 2b       	or	r18, r20
     9e2:	fc 01       	movw	r30, r24
     9e4:	20 83       	st	Z, r18
     9e6:	8e e4       	ldi	r24, 0x4E	; 78
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	2e e4       	ldi	r18, 0x4E	; 78
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	f9 01       	movw	r30, r18
     9f0:	20 81       	ld	r18, Z
     9f2:	42 2f       	mov	r20, r18
     9f4:	2a 81       	ldd	r18, Y+2	; 0x02
     9f6:	3b 81       	ldd	r19, Y+3	; 0x03
     9f8:	f9 01       	movw	r30, r18
     9fa:	21 81       	ldd	r18, Z+1	; 0x01
     9fc:	28 71       	andi	r18, 0x18	; 24
     9fe:	24 2b       	or	r18, r20
     a00:	fc 01       	movw	r30, r24
     a02:	20 83       	st	Z, r18
     a04:	89 e5       	ldi	r24, 0x59	; 89
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	29 e5       	ldi	r18, 0x59	; 89
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	f9 01       	movw	r30, r18
     a0e:	20 81       	ld	r18, Z
     a10:	24 60       	ori	r18, 0x04	; 4
     a12:	fc 01       	movw	r30, r24
     a14:	20 83       	st	Z, r18
     a16:	0e 94 b5 02 	call	0x56a	; 0x56a <Interrupts_On>
     a1a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Gv_PrescallerTimer1_Mask>
     a1e:	88 2f       	mov	r24, r24
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	82 30       	cpi	r24, 0x02	; 2
     a24:	91 05       	cpc	r25, r1
     a26:	e9 f0       	breq	.+58     	; 0xa62 <Timers_Init+0x1a6>
     a28:	83 30       	cpi	r24, 0x03	; 3
     a2a:	91 05       	cpc	r25, r1
     a2c:	2c f4       	brge	.+10     	; 0xa38 <Timers_Init+0x17c>
     a2e:	00 97       	sbiw	r24, 0x00	; 0
     a30:	61 f0       	breq	.+24     	; 0xa4a <Timers_Init+0x18e>
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	79 f0       	breq	.+30     	; 0xa54 <Timers_Init+0x198>
     a36:	31 c0       	rjmp	.+98     	; 0xa9a <Timers_Init+0x1de>
     a38:	84 30       	cpi	r24, 0x04	; 4
     a3a:	91 05       	cpc	r25, r1
     a3c:	01 f1       	breq	.+64     	; 0xa7e <Timers_Init+0x1c2>
     a3e:	84 30       	cpi	r24, 0x04	; 4
     a40:	91 05       	cpc	r25, r1
     a42:	b4 f0       	brlt	.+44     	; 0xa70 <Timers_Init+0x1b4>
     a44:	05 97       	sbiw	r24, 0x05	; 5
     a46:	11 f1       	breq	.+68     	; 0xa8c <Timers_Init+0x1d0>
     a48:	28 c0       	rjmp	.+80     	; 0xa9a <Timers_Init+0x1de>
     a4a:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a4e:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a52:	23 c0       	rjmp	.+70     	; 0xa9a <Timers_Init+0x1de>
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a5c:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a60:	1c c0       	rjmp	.+56     	; 0xa9a <Timers_Init+0x1de>
     a62:	88 e0       	ldi	r24, 0x08	; 8
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a6a:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a6e:	15 c0       	rjmp	.+42     	; 0xa9a <Timers_Init+0x1de>
     a70:	80 e4       	ldi	r24, 0x40	; 64
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a78:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a7c:	0e c0       	rjmp	.+28     	; 0xa9a <Timers_Init+0x1de>
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a86:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a8a:	07 c0       	rjmp	.+14     	; 0xa9a <Timers_Init+0x1de>
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	94 e0       	ldi	r25, 0x04	; 4
     a90:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     a94:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     a98:	00 00       	nop
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	89 83       	std	Y+1, r24	; 0x01
     a9e:	5f c0       	rjmp	.+190    	; 0xb5e <Timers_Init+0x2a2>
     aa0:	85 e4       	ldi	r24, 0x45	; 69
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	25 e4       	ldi	r18, 0x45	; 69
     aa6:	30 e0       	ldi	r19, 0x00	; 0
     aa8:	f9 01       	movw	r30, r18
     aaa:	40 81       	ld	r20, Z
     aac:	2a 81       	ldd	r18, Y+2	; 0x02
     aae:	3b 81       	ldd	r19, Y+3	; 0x03
     ab0:	f9 01       	movw	r30, r18
     ab2:	21 81       	ldd	r18, Z+1	; 0x01
     ab4:	24 2b       	or	r18, r20
     ab6:	fc 01       	movw	r30, r24
     ab8:	20 83       	st	Z, r18
     aba:	89 e5       	ldi	r24, 0x59	; 89
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	29 e5       	ldi	r18, 0x59	; 89
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	f9 01       	movw	r30, r18
     ac4:	40 81       	ld	r20, Z
     ac6:	2a 81       	ldd	r18, Y+2	; 0x02
     ac8:	3b 81       	ldd	r19, Y+3	; 0x03
     aca:	f9 01       	movw	r30, r18
     acc:	26 81       	ldd	r18, Z+6	; 0x06
     ace:	24 2b       	or	r18, r20
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18
     ad4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Gv_PrescallerTimer2_Mask>
     ad8:	88 2f       	mov	r24, r24
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	91 05       	cpc	r25, r1
     ae0:	e9 f0       	breq	.+58     	; 0xb1c <Timers_Init+0x260>
     ae2:	83 30       	cpi	r24, 0x03	; 3
     ae4:	91 05       	cpc	r25, r1
     ae6:	2c f4       	brge	.+10     	; 0xaf2 <Timers_Init+0x236>
     ae8:	00 97       	sbiw	r24, 0x00	; 0
     aea:	61 f0       	breq	.+24     	; 0xb04 <Timers_Init+0x248>
     aec:	01 97       	sbiw	r24, 0x01	; 1
     aee:	79 f0       	breq	.+30     	; 0xb0e <Timers_Init+0x252>
     af0:	31 c0       	rjmp	.+98     	; 0xb54 <Timers_Init+0x298>
     af2:	86 30       	cpi	r24, 0x06	; 6
     af4:	91 05       	cpc	r25, r1
     af6:	01 f1       	breq	.+64     	; 0xb38 <Timers_Init+0x27c>
     af8:	87 30       	cpi	r24, 0x07	; 7
     afa:	91 05       	cpc	r25, r1
     afc:	21 f1       	breq	.+72     	; 0xb46 <Timers_Init+0x28a>
     afe:	04 97       	sbiw	r24, 0x04	; 4
     b00:	a1 f0       	breq	.+40     	; 0xb2a <Timers_Init+0x26e>
     b02:	28 c0       	rjmp	.+80     	; 0xb54 <Timers_Init+0x298>
     b04:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b08:	10 92 93 00 	sts	0x0093, r1	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b0c:	23 c0       	rjmp	.+70     	; 0xb54 <Timers_Init+0x298>
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b16:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b1a:	1c c0       	rjmp	.+56     	; 0xb54 <Timers_Init+0x298>
     b1c:	88 e0       	ldi	r24, 0x08	; 8
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b24:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b28:	15 c0       	rjmp	.+42     	; 0xb54 <Timers_Init+0x298>
     b2a:	80 e4       	ldi	r24, 0x40	; 64
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b32:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b36:	0e c0       	rjmp	.+28     	; 0xb54 <Timers_Init+0x298>
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	91 e0       	ldi	r25, 0x01	; 1
     b3c:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b40:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b44:	07 c0       	rjmp	.+14     	; 0xb54 <Timers_Init+0x298>
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	94 e0       	ldi	r25, 0x04	; 4
     b4a:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     b4e:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     b52:	00 00       	nop
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	89 83       	std	Y+1, r24	; 0x01
     b58:	02 c0       	rjmp	.+4      	; 0xb5e <Timers_Init+0x2a2>
     b5a:	19 82       	std	Y+1, r1	; 0x01
     b5c:	00 00       	nop
     b5e:	8a 81       	ldd	r24, Y+2	; 0x02
     b60:	9b 81       	ldd	r25, Y+3	; 0x03
     b62:	fc 01       	movw	r30, r24
     b64:	82 81       	ldd	r24, Z+2	; 0x02
     b66:	93 81       	ldd	r25, Z+3	; 0x03
     b68:	a4 81       	ldd	r26, Z+4	; 0x04
     b6a:	b5 81       	ldd	r27, Z+5	; 0x05
     b6c:	2a 81       	ldd	r18, Y+2	; 0x02
     b6e:	3b 81       	ldd	r19, Y+3	; 0x03
     b70:	f9 01       	movw	r30, r18
     b72:	20 81       	ld	r18, Z
     b74:	ac 01       	movw	r20, r24
     b76:	bd 01       	movw	r22, r26
     b78:	82 2f       	mov	r24, r18
     b7a:	0e 94 c6 05 	call	0xb8c	; 0xb8c <Timers_SetCounter>
     b7e:	89 81       	ldd	r24, Y+1	; 0x01
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <Timers_SetCounter>:
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	cd b7       	in	r28, 0x3d	; 61
     b92:	de b7       	in	r29, 0x3e	; 62
     b94:	2d 97       	sbiw	r28, 0x0d	; 13
     b96:	0f b6       	in	r0, 0x3f	; 63
     b98:	f8 94       	cli
     b9a:	de bf       	out	0x3e, r29	; 62
     b9c:	0f be       	out	0x3f, r0	; 63
     b9e:	cd bf       	out	0x3d, r28	; 61
     ba0:	89 87       	std	Y+9, r24	; 0x09
     ba2:	4a 87       	std	Y+10, r20	; 0x0a
     ba4:	5b 87       	std	Y+11, r21	; 0x0b
     ba6:	6c 87       	std	Y+12, r22	; 0x0c
     ba8:	7d 87       	std	Y+13, r23	; 0x0d
     baa:	19 82       	std	Y+1, r1	; 0x01
     bac:	1a 82       	std	Y+2, r1	; 0x02
     bae:	1b 82       	std	Y+3, r1	; 0x03
     bb0:	1c 82       	std	Y+4, r1	; 0x04
     bb2:	89 85       	ldd	r24, Y+9	; 0x09
     bb4:	88 2f       	mov	r24, r24
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	81 30       	cpi	r24, 0x01	; 1
     bba:	91 05       	cpc	r25, r1
     bbc:	09 f4       	brne	.+2      	; 0xbc0 <Timers_SetCounter+0x34>
     bbe:	61 c0       	rjmp	.+194    	; 0xc82 <Timers_SetCounter+0xf6>
     bc0:	82 30       	cpi	r24, 0x02	; 2
     bc2:	91 05       	cpc	r25, r1
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <Timers_SetCounter+0x3c>
     bc6:	bd c0       	rjmp	.+378    	; 0xd42 <Timers_SetCounter+0x1b6>
     bc8:	89 2b       	or	r24, r25
     bca:	09 f0       	breq	.+2      	; 0xbce <Timers_SetCounter+0x42>
     bcc:	14 c1       	rjmp	.+552    	; 0xdf6 <Timers_SetCounter+0x26a>
     bce:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <Gv_PrescallerTimer0_AbsoluteValue>
     bd2:	90 91 96 00 	lds	r25, 0x0096	; 0x800096 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     bd6:	cc 01       	movw	r24, r24
     bd8:	a0 e0       	ldi	r26, 0x00	; 0
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	9c 01       	movw	r18, r24
     bde:	ad 01       	movw	r20, r26
     be0:	60 e4       	ldi	r22, 0x40	; 64
     be2:	72 e4       	ldi	r23, 0x42	; 66
     be4:	8f e0       	ldi	r24, 0x0F	; 15
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__mulsi3>
     bec:	dc 01       	movw	r26, r24
     bee:	cb 01       	movw	r24, r22
     bf0:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     bf4:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     bf8:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     bfc:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     c00:	bc 01       	movw	r22, r24
     c02:	cd 01       	movw	r24, r26
     c04:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     c08:	da 01       	movw	r26, r20
     c0a:	c9 01       	movw	r24, r18
     c0c:	9c 01       	movw	r18, r24
     c0e:	ad 01       	movw	r20, r26
     c10:	8a 85       	ldd	r24, Y+10	; 0x0a
     c12:	9b 85       	ldd	r25, Y+11	; 0x0b
     c14:	ac 85       	ldd	r26, Y+12	; 0x0c
     c16:	bd 85       	ldd	r27, Y+13	; 0x0d
     c18:	bc 01       	movw	r22, r24
     c1a:	cd 01       	movw	r24, r26
     c1c:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     c20:	da 01       	movw	r26, r20
     c22:	c9 01       	movw	r24, r18
     c24:	8d 83       	std	Y+5, r24	; 0x05
     c26:	9e 83       	std	Y+6, r25	; 0x06
     c28:	af 83       	std	Y+7, r26	; 0x07
     c2a:	b8 87       	std	Y+8, r27	; 0x08
     c2c:	8d 81       	ldd	r24, Y+5	; 0x05
     c2e:	9e 81       	ldd	r25, Y+6	; 0x06
     c30:	af 81       	ldd	r26, Y+7	; 0x07
     c32:	b8 85       	ldd	r27, Y+8	; 0x08
     c34:	81 30       	cpi	r24, 0x01	; 1
     c36:	91 40       	sbci	r25, 0x01	; 1
     c38:	a1 05       	cpc	r26, r1
     c3a:	b1 05       	cpc	r27, r1
     c3c:	28 f0       	brcs	.+10     	; 0xc48 <Timers_SetCounter+0xbc>
     c3e:	19 82       	std	Y+1, r1	; 0x01
     c40:	1a 82       	std	Y+2, r1	; 0x02
     c42:	1b 82       	std	Y+3, r1	; 0x03
     c44:	1c 82       	std	Y+4, r1	; 0x04
     c46:	dc c0       	rjmp	.+440    	; 0xe00 <Timers_SetCounter+0x274>
     c48:	8d 81       	ldd	r24, Y+5	; 0x05
     c4a:	9e 81       	ldd	r25, Y+6	; 0x06
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	31 e0       	ldi	r19, 0x01	; 1
     c50:	a9 01       	movw	r20, r18
     c52:	48 1b       	sub	r20, r24
     c54:	59 0b       	sbc	r21, r25
     c56:	ca 01       	movw	r24, r20
     c58:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     c5c:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     c60:	82 e5       	ldi	r24, 0x52	; 82
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     c68:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     c6c:	fc 01       	movw	r30, r24
     c6e:	20 83       	st	Z, r18
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	a0 e0       	ldi	r26, 0x00	; 0
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	89 83       	std	Y+1, r24	; 0x01
     c7a:	9a 83       	std	Y+2, r25	; 0x02
     c7c:	ab 83       	std	Y+3, r26	; 0x03
     c7e:	bc 83       	std	Y+4, r27	; 0x04
     c80:	bf c0       	rjmp	.+382    	; 0xe00 <Timers_SetCounter+0x274>
     c82:	80 91 97 00 	lds	r24, 0x0097	; 0x800097 <Gv_PrescallerTimer1_AbsoluteValue>
     c86:	90 91 98 00 	lds	r25, 0x0098	; 0x800098 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     c8a:	cc 01       	movw	r24, r24
     c8c:	a0 e0       	ldi	r26, 0x00	; 0
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	9c 01       	movw	r18, r24
     c92:	ad 01       	movw	r20, r26
     c94:	60 e4       	ldi	r22, 0x40	; 64
     c96:	72 e4       	ldi	r23, 0x42	; 66
     c98:	8f e0       	ldi	r24, 0x0F	; 15
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__mulsi3>
     ca0:	dc 01       	movw	r26, r24
     ca2:	cb 01       	movw	r24, r22
     ca4:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     ca8:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     cac:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     cb0:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     cb4:	bc 01       	movw	r22, r24
     cb6:	cd 01       	movw	r24, r26
     cb8:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     cbc:	da 01       	movw	r26, r20
     cbe:	c9 01       	movw	r24, r18
     cc0:	9c 01       	movw	r18, r24
     cc2:	ad 01       	movw	r20, r26
     cc4:	8a 85       	ldd	r24, Y+10	; 0x0a
     cc6:	9b 85       	ldd	r25, Y+11	; 0x0b
     cc8:	ac 85       	ldd	r26, Y+12	; 0x0c
     cca:	bd 85       	ldd	r27, Y+13	; 0x0d
     ccc:	bc 01       	movw	r22, r24
     cce:	cd 01       	movw	r24, r26
     cd0:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     cd4:	da 01       	movw	r26, r20
     cd6:	c9 01       	movw	r24, r18
     cd8:	8d 83       	std	Y+5, r24	; 0x05
     cda:	9e 83       	std	Y+6, r25	; 0x06
     cdc:	af 83       	std	Y+7, r26	; 0x07
     cde:	b8 87       	std	Y+8, r27	; 0x08
     ce0:	8d 81       	ldd	r24, Y+5	; 0x05
     ce2:	9e 81       	ldd	r25, Y+6	; 0x06
     ce4:	af 81       	ldd	r26, Y+7	; 0x07
     ce6:	b8 85       	ldd	r27, Y+8	; 0x08
     ce8:	01 97       	sbiw	r24, 0x01	; 1
     cea:	a1 40       	sbci	r26, 0x01	; 1
     cec:	b1 05       	cpc	r27, r1
     cee:	28 f0       	brcs	.+10     	; 0xcfa <Timers_SetCounter+0x16e>
     cf0:	19 82       	std	Y+1, r1	; 0x01
     cf2:	1a 82       	std	Y+2, r1	; 0x02
     cf4:	1b 82       	std	Y+3, r1	; 0x03
     cf6:	1c 82       	std	Y+4, r1	; 0x04
     cf8:	83 c0       	rjmp	.+262    	; 0xe00 <Timers_SetCounter+0x274>
     cfa:	8d 81       	ldd	r24, Y+5	; 0x05
     cfc:	9e 81       	ldd	r25, Y+6	; 0x06
     cfe:	91 95       	neg	r25
     d00:	81 95       	neg	r24
     d02:	91 09       	sbc	r25, r1
     d04:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     d08:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     d0c:	8d e4       	ldi	r24, 0x4D	; 77
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     d14:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     d18:	23 2f       	mov	r18, r19
     d1a:	33 27       	eor	r19, r19
     d1c:	fc 01       	movw	r30, r24
     d1e:	20 83       	st	Z, r18
     d20:	8c e4       	ldi	r24, 0x4C	; 76
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     d28:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     d2c:	fc 01       	movw	r30, r24
     d2e:	20 83       	st	Z, r18
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	a0 e0       	ldi	r26, 0x00	; 0
     d36:	b0 e0       	ldi	r27, 0x00	; 0
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	9a 83       	std	Y+2, r25	; 0x02
     d3c:	ab 83       	std	Y+3, r26	; 0x03
     d3e:	bc 83       	std	Y+4, r27	; 0x04
     d40:	5f c0       	rjmp	.+190    	; 0xe00 <Timers_SetCounter+0x274>
     d42:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <Gv_PrescallerTimer2_AbsoluteValue>
     d46:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     d4a:	cc 01       	movw	r24, r24
     d4c:	a0 e0       	ldi	r26, 0x00	; 0
     d4e:	b0 e0       	ldi	r27, 0x00	; 0
     d50:	9c 01       	movw	r18, r24
     d52:	ad 01       	movw	r20, r26
     d54:	60 e4       	ldi	r22, 0x40	; 64
     d56:	72 e4       	ldi	r23, 0x42	; 66
     d58:	8f e0       	ldi	r24, 0x0F	; 15
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__mulsi3>
     d60:	dc 01       	movw	r26, r24
     d62:	cb 01       	movw	r24, r22
     d64:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     d68:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     d6c:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     d70:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     d74:	bc 01       	movw	r22, r24
     d76:	cd 01       	movw	r24, r26
     d78:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     d7c:	da 01       	movw	r26, r20
     d7e:	c9 01       	movw	r24, r18
     d80:	9c 01       	movw	r18, r24
     d82:	ad 01       	movw	r20, r26
     d84:	8a 85       	ldd	r24, Y+10	; 0x0a
     d86:	9b 85       	ldd	r25, Y+11	; 0x0b
     d88:	ac 85       	ldd	r26, Y+12	; 0x0c
     d8a:	bd 85       	ldd	r27, Y+13	; 0x0d
     d8c:	bc 01       	movw	r22, r24
     d8e:	cd 01       	movw	r24, r26
     d90:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     d94:	da 01       	movw	r26, r20
     d96:	c9 01       	movw	r24, r18
     d98:	8d 83       	std	Y+5, r24	; 0x05
     d9a:	9e 83       	std	Y+6, r25	; 0x06
     d9c:	af 83       	std	Y+7, r26	; 0x07
     d9e:	b8 87       	std	Y+8, r27	; 0x08
     da0:	8d 81       	ldd	r24, Y+5	; 0x05
     da2:	9e 81       	ldd	r25, Y+6	; 0x06
     da4:	af 81       	ldd	r26, Y+7	; 0x07
     da6:	b8 85       	ldd	r27, Y+8	; 0x08
     da8:	81 30       	cpi	r24, 0x01	; 1
     daa:	91 40       	sbci	r25, 0x01	; 1
     dac:	a1 05       	cpc	r26, r1
     dae:	b1 05       	cpc	r27, r1
     db0:	28 f0       	brcs	.+10     	; 0xdbc <Timers_SetCounter+0x230>
     db2:	19 82       	std	Y+1, r1	; 0x01
     db4:	1a 82       	std	Y+2, r1	; 0x02
     db6:	1b 82       	std	Y+3, r1	; 0x03
     db8:	1c 82       	std	Y+4, r1	; 0x04
     dba:	22 c0       	rjmp	.+68     	; 0xe00 <Timers_SetCounter+0x274>
     dbc:	8d 81       	ldd	r24, Y+5	; 0x05
     dbe:	9e 81       	ldd	r25, Y+6	; 0x06
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	31 e0       	ldi	r19, 0x01	; 1
     dc4:	a9 01       	movw	r20, r18
     dc6:	48 1b       	sub	r20, r24
     dc8:	59 0b       	sbc	r21, r25
     dca:	ca 01       	movw	r24, r20
     dcc:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     dd0:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     dd4:	84 e4       	ldi	r24, 0x44	; 68
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     ddc:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     de0:	fc 01       	movw	r30, r24
     de2:	20 83       	st	Z, r18
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	a0 e0       	ldi	r26, 0x00	; 0
     dea:	b0 e0       	ldi	r27, 0x00	; 0
     dec:	89 83       	std	Y+1, r24	; 0x01
     dee:	9a 83       	std	Y+2, r25	; 0x02
     df0:	ab 83       	std	Y+3, r26	; 0x03
     df2:	bc 83       	std	Y+4, r27	; 0x04
     df4:	05 c0       	rjmp	.+10     	; 0xe00 <Timers_SetCounter+0x274>
     df6:	19 82       	std	Y+1, r1	; 0x01
     df8:	1a 82       	std	Y+2, r1	; 0x02
     dfa:	1b 82       	std	Y+3, r1	; 0x03
     dfc:	1c 82       	std	Y+4, r1	; 0x04
     dfe:	00 00       	nop
     e00:	89 81       	ldd	r24, Y+1	; 0x01
     e02:	2d 96       	adiw	r28, 0x0d	; 13
     e04:	0f b6       	in	r0, 0x3f	; 63
     e06:	f8 94       	cli
     e08:	de bf       	out	0x3e, r29	; 62
     e0a:	0f be       	out	0x3f, r0	; 63
     e0c:	cd bf       	out	0x3d, r28	; 61
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	08 95       	ret

00000e14 <Timers_Start>:
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	1f 92       	push	r1
     e1a:	cd b7       	in	r28, 0x3d	; 61
     e1c:	de b7       	in	r29, 0x3e	; 62
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	89 81       	ldd	r24, Y+1	; 0x01
     e22:	88 2f       	mov	r24, r24
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	81 30       	cpi	r24, 0x01	; 1
     e28:	91 05       	cpc	r25, r1
     e2a:	99 f0       	breq	.+38     	; 0xe52 <Timers_Start+0x3e>
     e2c:	82 30       	cpi	r24, 0x02	; 2
     e2e:	91 05       	cpc	r25, r1
     e30:	e1 f0       	breq	.+56     	; 0xe6a <Timers_Start+0x56>
     e32:	89 2b       	or	r24, r25
     e34:	09 f0       	breq	.+2      	; 0xe38 <Timers_Start+0x24>
     e36:	26 c0       	rjmp	.+76     	; 0xe84 <Timers_Start+0x70>
     e38:	83 e5       	ldi	r24, 0x53	; 83
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	23 e5       	ldi	r18, 0x53	; 83
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	f9 01       	movw	r30, r18
     e42:	20 81       	ld	r18, Z
     e44:	28 7f       	andi	r18, 0xF8	; 248
     e46:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <Gv_PrescallerTimer0_Mask>
     e4a:	23 2b       	or	r18, r19
     e4c:	fc 01       	movw	r30, r24
     e4e:	20 83       	st	Z, r18
     e50:	19 c0       	rjmp	.+50     	; 0xe84 <Timers_Start+0x70>
     e52:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <Gv_PrescallerTimer1_Mask>
     e56:	8e e4       	ldi	r24, 0x4E	; 78
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	2e e4       	ldi	r18, 0x4E	; 78
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	f9 01       	movw	r30, r18
     e60:	20 81       	ld	r18, Z
     e62:	24 2b       	or	r18, r20
     e64:	fc 01       	movw	r30, r24
     e66:	20 83       	st	Z, r18
     e68:	0d c0       	rjmp	.+26     	; 0xe84 <Timers_Start+0x70>
     e6a:	85 e4       	ldi	r24, 0x45	; 69
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	25 e4       	ldi	r18, 0x45	; 69
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	f9 01       	movw	r30, r18
     e74:	20 81       	ld	r18, Z
     e76:	28 7f       	andi	r18, 0xF8	; 248
     e78:	30 91 68 00 	lds	r19, 0x0068	; 0x800068 <Gv_PrescallerTimer2_Mask>
     e7c:	23 2b       	or	r18, r19
     e7e:	fc 01       	movw	r30, r24
     e80:	20 83       	st	Z, r18
     e82:	00 00       	nop
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	0f 90       	pop	r0
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <__vector_9>:
}


ISR_T(TIMER1_OVF_vect)
{
     e8e:	1f 92       	push	r1
     e90:	0f 92       	push	r0
     e92:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     e96:	0f 92       	push	r0
     e98:	11 24       	eor	r1, r1
     e9a:	2f 93       	push	r18
     e9c:	3f 93       	push	r19
     e9e:	4f 93       	push	r20
     ea0:	5f 93       	push	r21
     ea2:	6f 93       	push	r22
     ea4:	7f 93       	push	r23
     ea6:	8f 93       	push	r24
     ea8:	9f 93       	push	r25
     eaa:	af 93       	push	r26
     eac:	bf 93       	push	r27
     eae:	ef 93       	push	r30
     eb0:	ff 93       	push	r31
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	cd b7       	in	r28, 0x3d	; 61
     eb8:	de b7       	in	r29, 0x3e	; 62
	TimerOneSecond_Flag = TRUE;
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <TimerOneSecond_Flag>
	Timers_SetCounter(TIMER1,SECONDS_TO_SETCOUNTER);
     ec0:	40 e4       	ldi	r20, 0x40	; 64
     ec2:	52 e4       	ldi	r21, 0x42	; 66
     ec4:	6f e0       	ldi	r22, 0x0F	; 15
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	0e 94 c6 05 	call	0xb8c	; 0xb8c <Timers_SetCounter>
     ece:	00 00       	nop
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	ff 91       	pop	r31
     ed6:	ef 91       	pop	r30
     ed8:	bf 91       	pop	r27
     eda:	af 91       	pop	r26
     edc:	9f 91       	pop	r25
     ede:	8f 91       	pop	r24
     ee0:	7f 91       	pop	r23
     ee2:	6f 91       	pop	r22
     ee4:	5f 91       	pop	r21
     ee6:	4f 91       	pop	r20
     ee8:	3f 91       	pop	r19
     eea:	2f 91       	pop	r18
     eec:	0f 90       	pop	r0
     eee:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     ef2:	0f 90       	pop	r0
     ef4:	1f 90       	pop	r1
     ef6:	18 95       	reti

00000ef8 <UART_Init>:
     ef8:	ef 92       	push	r14
     efa:	ff 92       	push	r15
     efc:	0f 93       	push	r16
     efe:	1f 93       	push	r17
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	00 d0       	rcall	.+0      	; 0xf06 <UART_Init+0xe>
     f06:	00 d0       	rcall	.+0      	; 0xf08 <UART_Init+0x10>
     f08:	00 d0       	rcall	.+0      	; 0xf0a <UART_Init+0x12>
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	9e 83       	std	Y+6, r25	; 0x06
     f10:	8d 83       	std	Y+5, r24	; 0x05
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	89 83       	std	Y+1, r24	; 0x01
     f16:	80 e8       	ldi	r24, 0x80	; 128
     f18:	8a 83       	std	Y+2, r24	; 0x02
     f1a:	8d 81       	ldd	r24, Y+5	; 0x05
     f1c:	9e 81       	ldd	r25, Y+6	; 0x06
     f1e:	fc 01       	movw	r30, r24
     f20:	21 85       	ldd	r18, Z+9	; 0x09
     f22:	32 85       	ldd	r19, Z+10	; 0x0a
     f24:	43 85       	ldd	r20, Z+11	; 0x0b
     f26:	54 85       	ldd	r21, Z+12	; 0x0c
     f28:	8d 81       	ldd	r24, Y+5	; 0x05
     f2a:	9e 81       	ldd	r25, Y+6	; 0x06
     f2c:	fc 01       	movw	r30, r24
     f2e:	80 81       	ld	r24, Z
     f30:	91 81       	ldd	r25, Z+1	; 0x01
     f32:	a2 81       	ldd	r26, Z+2	; 0x02
     f34:	b3 81       	ldd	r27, Z+3	; 0x03
     f36:	88 0f       	add	r24, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	aa 1f       	adc	r26, r26
     f3c:	bb 1f       	adc	r27, r27
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	aa 1f       	adc	r26, r26
     f44:	bb 1f       	adc	r27, r27
     f46:	88 0f       	add	r24, r24
     f48:	99 1f       	adc	r25, r25
     f4a:	aa 1f       	adc	r26, r26
     f4c:	bb 1f       	adc	r27, r27
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	aa 1f       	adc	r26, r26
     f54:	bb 1f       	adc	r27, r27
     f56:	7c 01       	movw	r14, r24
     f58:	8d 01       	movw	r16, r26
     f5a:	ca 01       	movw	r24, r20
     f5c:	b9 01       	movw	r22, r18
     f5e:	a8 01       	movw	r20, r16
     f60:	97 01       	movw	r18, r14
     f62:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__udivmodsi4>
     f66:	da 01       	movw	r26, r20
     f68:	c9 01       	movw	r24, r18
     f6a:	01 97       	sbiw	r24, 0x01	; 1
     f6c:	9c 83       	std	Y+4, r25	; 0x04
     f6e:	8b 83       	std	Y+3, r24	; 0x03
     f70:	8a 81       	ldd	r24, Y+2	; 0x02
     f72:	80 68       	ori	r24, 0x80	; 128
     f74:	8a 83       	std	Y+2, r24	; 0x02
     f76:	8a 81       	ldd	r24, Y+2	; 0x02
     f78:	82 60       	ori	r24, 0x02	; 2
     f7a:	8a 83       	std	Y+2, r24	; 0x02
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	84 60       	ori	r24, 0x04	; 4
     f80:	8a 83       	std	Y+2, r24	; 0x02
     f82:	8a e2       	ldi	r24, 0x2A	; 42
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	2a e2       	ldi	r18, 0x2A	; 42
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	f9 01       	movw	r30, r18
     f8c:	20 81       	ld	r18, Z
     f8e:	2b 7f       	andi	r18, 0xFB	; 251
     f90:	fc 01       	movw	r30, r24
     f92:	20 83       	st	Z, r18
     f94:	8d 81       	ldd	r24, Y+5	; 0x05
     f96:	9e 81       	ldd	r25, Y+6	; 0x06
     f98:	fc 01       	movw	r30, r24
     f9a:	84 81       	ldd	r24, Z+4	; 0x04
     f9c:	88 2f       	mov	r24, r24
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	00 97       	sbiw	r24, 0x00	; 0
     fa2:	61 f0       	breq	.+24     	; 0xfbc <UART_Init+0xc4>
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	a1 f4       	brne	.+40     	; 0xfd0 <UART_Init+0xd8>
     fa8:	8a e2       	ldi	r24, 0x2A	; 42
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	2a e2       	ldi	r18, 0x2A	; 42
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	f9 01       	movw	r30, r18
     fb2:	20 81       	ld	r18, Z
     fb4:	20 61       	ori	r18, 0x10	; 16
     fb6:	fc 01       	movw	r30, r24
     fb8:	20 83       	st	Z, r18
     fba:	0c c0       	rjmp	.+24     	; 0xfd4 <UART_Init+0xdc>
     fbc:	8a e2       	ldi	r24, 0x2A	; 42
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	2a e2       	ldi	r18, 0x2A	; 42
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	f9 01       	movw	r30, r18
     fc6:	20 81       	ld	r18, Z
     fc8:	2f 7e       	andi	r18, 0xEF	; 239
     fca:	fc 01       	movw	r30, r24
     fcc:	20 83       	st	Z, r18
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <UART_Init+0xdc>
     fd0:	19 82       	std	Y+1, r1	; 0x01
     fd2:	00 00       	nop
     fd4:	8d 81       	ldd	r24, Y+5	; 0x05
     fd6:	9e 81       	ldd	r25, Y+6	; 0x06
     fd8:	fc 01       	movw	r30, r24
     fda:	85 81       	ldd	r24, Z+5	; 0x05
     fdc:	88 2f       	mov	r24, r24
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	00 97       	sbiw	r24, 0x00	; 0
     fe2:	61 f0       	breq	.+24     	; 0xffc <UART_Init+0x104>
     fe4:	01 97       	sbiw	r24, 0x01	; 1
     fe6:	a1 f4       	brne	.+40     	; 0x1010 <UART_Init+0x118>
     fe8:	8a e2       	ldi	r24, 0x2A	; 42
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	2a e2       	ldi	r18, 0x2A	; 42
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	f9 01       	movw	r30, r18
     ff2:	20 81       	ld	r18, Z
     ff4:	28 60       	ori	r18, 0x08	; 8
     ff6:	fc 01       	movw	r30, r24
     ff8:	20 83       	st	Z, r18
     ffa:	0c c0       	rjmp	.+24     	; 0x1014 <UART_Init+0x11c>
     ffc:	8a e2       	ldi	r24, 0x2A	; 42
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	2a e2       	ldi	r18, 0x2A	; 42
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	f9 01       	movw	r30, r18
    1006:	20 81       	ld	r18, Z
    1008:	27 7f       	andi	r18, 0xF7	; 247
    100a:	fc 01       	movw	r30, r24
    100c:	20 83       	st	Z, r18
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <UART_Init+0x11c>
    1010:	19 82       	std	Y+1, r1	; 0x01
    1012:	00 00       	nop
    1014:	8d 81       	ldd	r24, Y+5	; 0x05
    1016:	9e 81       	ldd	r25, Y+6	; 0x06
    1018:	fc 01       	movw	r30, r24
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	88 2f       	mov	r24, r24
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	81 30       	cpi	r24, 0x01	; 1
    1022:	91 05       	cpc	r25, r1
    1024:	61 f0       	breq	.+24     	; 0x103e <UART_Init+0x146>
    1026:	82 30       	cpi	r24, 0x02	; 2
    1028:	91 05       	cpc	r25, r1
    102a:	81 f0       	breq	.+32     	; 0x104c <UART_Init+0x154>
    102c:	89 2b       	or	r24, r25
    102e:	a9 f4       	brne	.+42     	; 0x105a <UART_Init+0x162>
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	8f 7e       	andi	r24, 0xEF	; 239
    1034:	8a 83       	std	Y+2, r24	; 0x02
    1036:	8a 81       	ldd	r24, Y+2	; 0x02
    1038:	8f 7d       	andi	r24, 0xDF	; 223
    103a:	8a 83       	std	Y+2, r24	; 0x02
    103c:	10 c0       	rjmp	.+32     	; 0x105e <UART_Init+0x166>
    103e:	8a 81       	ldd	r24, Y+2	; 0x02
    1040:	8f 7e       	andi	r24, 0xEF	; 239
    1042:	8a 83       	std	Y+2, r24	; 0x02
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	80 62       	ori	r24, 0x20	; 32
    1048:	8a 83       	std	Y+2, r24	; 0x02
    104a:	09 c0       	rjmp	.+18     	; 0x105e <UART_Init+0x166>
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	80 61       	ori	r24, 0x10	; 16
    1050:	8a 83       	std	Y+2, r24	; 0x02
    1052:	8a 81       	ldd	r24, Y+2	; 0x02
    1054:	80 62       	ori	r24, 0x20	; 32
    1056:	8a 83       	std	Y+2, r24	; 0x02
    1058:	02 c0       	rjmp	.+4      	; 0x105e <UART_Init+0x166>
    105a:	19 82       	std	Y+1, r1	; 0x01
    105c:	00 00       	nop
    105e:	8d 81       	ldd	r24, Y+5	; 0x05
    1060:	9e 81       	ldd	r25, Y+6	; 0x06
    1062:	fc 01       	movw	r30, r24
    1064:	87 81       	ldd	r24, Z+7	; 0x07
    1066:	88 2f       	mov	r24, r24
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	81 30       	cpi	r24, 0x01	; 1
    106c:	91 05       	cpc	r25, r1
    106e:	19 f0       	breq	.+6      	; 0x1076 <UART_Init+0x17e>
    1070:	02 97       	sbiw	r24, 0x02	; 2
    1072:	29 f0       	breq	.+10     	; 0x107e <UART_Init+0x186>
    1074:	08 c0       	rjmp	.+16     	; 0x1086 <UART_Init+0x18e>
    1076:	8a 81       	ldd	r24, Y+2	; 0x02
    1078:	87 7f       	andi	r24, 0xF7	; 247
    107a:	8a 83       	std	Y+2, r24	; 0x02
    107c:	06 c0       	rjmp	.+12     	; 0x108a <UART_Init+0x192>
    107e:	8a 81       	ldd	r24, Y+2	; 0x02
    1080:	88 60       	ori	r24, 0x08	; 8
    1082:	8a 83       	std	Y+2, r24	; 0x02
    1084:	02 c0       	rjmp	.+4      	; 0x108a <UART_Init+0x192>
    1086:	19 82       	std	Y+1, r1	; 0x01
    1088:	00 00       	nop
    108a:	8d 81       	ldd	r24, Y+5	; 0x05
    108c:	9e 81       	ldd	r25, Y+6	; 0x06
    108e:	fc 01       	movw	r30, r24
    1090:	80 85       	ldd	r24, Z+8	; 0x08
    1092:	88 2f       	mov	r24, r24
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	00 97       	sbiw	r24, 0x00	; 0
    1098:	71 f0       	breq	.+28     	; 0x10b6 <UART_Init+0x1be>
    109a:	01 97       	sbiw	r24, 0x01	; 1
    109c:	b1 f4       	brne	.+44     	; 0x10ca <UART_Init+0x1d2>
    109e:	8a e2       	ldi	r24, 0x2A	; 42
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	2a e2       	ldi	r18, 0x2A	; 42
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	f9 01       	movw	r30, r18
    10a8:	20 81       	ld	r18, Z
    10aa:	20 68       	ori	r18, 0x80	; 128
    10ac:	fc 01       	movw	r30, r24
    10ae:	20 83       	st	Z, r18
    10b0:	0e 94 b5 02 	call	0x56a	; 0x56a <Interrupts_On>
    10b4:	0c c0       	rjmp	.+24     	; 0x10ce <UART_Init+0x1d6>
    10b6:	8a e2       	ldi	r24, 0x2A	; 42
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	2a e2       	ldi	r18, 0x2A	; 42
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	f9 01       	movw	r30, r18
    10c0:	20 81       	ld	r18, Z
    10c2:	2f 77       	andi	r18, 0x7F	; 127
    10c4:	fc 01       	movw	r30, r24
    10c6:	20 83       	st	Z, r18
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <UART_Init+0x1d6>
    10ca:	19 82       	std	Y+1, r1	; 0x01
    10cc:	00 00       	nop
    10ce:	80 e4       	ldi	r24, 0x40	; 64
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	2a 81       	ldd	r18, Y+2	; 0x02
    10d4:	fc 01       	movw	r30, r24
    10d6:	20 83       	st	Z, r18
    10d8:	89 e2       	ldi	r24, 0x29	; 41
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	23 e3       	ldi	r18, 0x33	; 51
    10de:	fc 01       	movw	r30, r24
    10e0:	20 83       	st	Z, r18
    10e2:	89 81       	ldd	r24, Y+1	; 0x01
    10e4:	26 96       	adiw	r28, 0x06	; 6
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	f8 94       	cli
    10ea:	de bf       	out	0x3e, r29	; 62
    10ec:	0f be       	out	0x3f, r0	; 63
    10ee:	cd bf       	out	0x3d, r28	; 61
    10f0:	df 91       	pop	r29
    10f2:	cf 91       	pop	r28
    10f4:	1f 91       	pop	r17
    10f6:	0f 91       	pop	r16
    10f8:	ff 90       	pop	r15
    10fa:	ef 90       	pop	r14
    10fc:	08 95       	ret

000010fe <UART_Send>:
    10fe:	cf 93       	push	r28
    1100:	df 93       	push	r29
    1102:	1f 92       	push	r1
    1104:	cd b7       	in	r28, 0x3d	; 61
    1106:	de b7       	in	r29, 0x3e	; 62
    1108:	89 83       	std	Y+1, r24	; 0x01
    110a:	00 00       	nop
    110c:	8b e2       	ldi	r24, 0x2B	; 43
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	fc 01       	movw	r30, r24
    1112:	80 81       	ld	r24, Z
    1114:	82 95       	swap	r24
    1116:	86 95       	lsr	r24
    1118:	87 70       	andi	r24, 0x07	; 7
    111a:	88 2f       	mov	r24, r24
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	81 70       	andi	r24, 0x01	; 1
    1120:	99 27       	eor	r25, r25
    1122:	89 2b       	or	r24, r25
    1124:	99 f3       	breq	.-26     	; 0x110c <UART_Send+0xe>
    1126:	8c e2       	ldi	r24, 0x2C	; 44
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	29 81       	ldd	r18, Y+1	; 0x01
    112c:	fc 01       	movw	r30, r24
    112e:	20 83       	st	Z, r18
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	0f 90       	pop	r0
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	08 95       	ret

0000113a <UART_SendToTTL>:
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	cf 93       	push	r28
    1140:	df 93       	push	r29
    1142:	cd b7       	in	r28, 0x3d	; 61
    1144:	de b7       	in	r29, 0x3e	; 62
    1146:	2f 97       	sbiw	r28, 0x0f	; 15
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
    1152:	6c 87       	std	Y+12, r22	; 0x0c
    1154:	7d 87       	std	Y+13, r23	; 0x0d
    1156:	8e 87       	std	Y+14, r24	; 0x0e
    1158:	9f 87       	std	Y+15, r25	; 0x0f
    115a:	8c 85       	ldd	r24, Y+12	; 0x0c
    115c:	9d 85       	ldd	r25, Y+13	; 0x0d
    115e:	9e 01       	movw	r18, r28
    1160:	2e 5f       	subi	r18, 0xFE	; 254
    1162:	3f 4f       	sbci	r19, 0xFF	; 255
    1164:	4a e0       	ldi	r20, 0x0A	; 10
    1166:	50 e0       	ldi	r21, 0x00	; 0
    1168:	b9 01       	movw	r22, r18
    116a:	0e 94 36 09 	call	0x126c	; 0x126c <itoa>
    116e:	19 82       	std	Y+1, r1	; 0x01
    1170:	0f c0       	rjmp	.+30     	; 0x1190 <UART_SendToTTL+0x56>
    1172:	89 81       	ldd	r24, Y+1	; 0x01
    1174:	88 2f       	mov	r24, r24
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	9e 01       	movw	r18, r28
    117a:	2e 5f       	subi	r18, 0xFE	; 254
    117c:	3f 4f       	sbci	r19, 0xFF	; 255
    117e:	82 0f       	add	r24, r18
    1180:	93 1f       	adc	r25, r19
    1182:	fc 01       	movw	r30, r24
    1184:	80 81       	ld	r24, Z
    1186:	0e 94 7f 08 	call	0x10fe	; 0x10fe <UART_Send>
    118a:	89 81       	ldd	r24, Y+1	; 0x01
    118c:	8f 5f       	subi	r24, 0xFF	; 255
    118e:	89 83       	std	Y+1, r24	; 0x01
    1190:	89 81       	ldd	r24, Y+1	; 0x01
    1192:	08 2f       	mov	r16, r24
    1194:	10 e0       	ldi	r17, 0x00	; 0
    1196:	ce 01       	movw	r24, r28
    1198:	02 96       	adiw	r24, 0x02	; 2
    119a:	0e 94 2d 09 	call	0x125a	; 0x125a <strlen>
    119e:	08 17       	cp	r16, r24
    11a0:	19 07       	cpc	r17, r25
    11a2:	38 f3       	brcs	.-50     	; 0x1172 <UART_SendToTTL+0x38>
    11a4:	8d e2       	ldi	r24, 0x2D	; 45
    11a6:	0e 94 7f 08 	call	0x10fe	; 0x10fe <UART_Send>
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	2f 96       	adiw	r28, 0x0f	; 15
    11ae:	0f b6       	in	r0, 0x3f	; 63
    11b0:	f8 94       	cli
    11b2:	de bf       	out	0x3e, r29	; 62
    11b4:	0f be       	out	0x3f, r0	; 63
    11b6:	cd bf       	out	0x3d, r28	; 61
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	1f 91       	pop	r17
    11be:	0f 91       	pop	r16
    11c0:	08 95       	ret

000011c2 <__mulsi3>:
    11c2:	db 01       	movw	r26, r22
    11c4:	8f 93       	push	r24
    11c6:	9f 93       	push	r25
    11c8:	0e 94 13 09 	call	0x1226	; 0x1226 <__muluhisi3>
    11cc:	bf 91       	pop	r27
    11ce:	af 91       	pop	r26
    11d0:	a2 9f       	mul	r26, r18
    11d2:	80 0d       	add	r24, r0
    11d4:	91 1d       	adc	r25, r1
    11d6:	a3 9f       	mul	r26, r19
    11d8:	90 0d       	add	r25, r0
    11da:	b2 9f       	mul	r27, r18
    11dc:	90 0d       	add	r25, r0
    11de:	11 24       	eor	r1, r1
    11e0:	08 95       	ret

000011e2 <__udivmodsi4>:
    11e2:	a1 e2       	ldi	r26, 0x21	; 33
    11e4:	1a 2e       	mov	r1, r26
    11e6:	aa 1b       	sub	r26, r26
    11e8:	bb 1b       	sub	r27, r27
    11ea:	fd 01       	movw	r30, r26
    11ec:	0d c0       	rjmp	.+26     	; 0x1208 <__udivmodsi4_ep>

000011ee <__udivmodsi4_loop>:
    11ee:	aa 1f       	adc	r26, r26
    11f0:	bb 1f       	adc	r27, r27
    11f2:	ee 1f       	adc	r30, r30
    11f4:	ff 1f       	adc	r31, r31
    11f6:	a2 17       	cp	r26, r18
    11f8:	b3 07       	cpc	r27, r19
    11fa:	e4 07       	cpc	r30, r20
    11fc:	f5 07       	cpc	r31, r21
    11fe:	20 f0       	brcs	.+8      	; 0x1208 <__udivmodsi4_ep>
    1200:	a2 1b       	sub	r26, r18
    1202:	b3 0b       	sbc	r27, r19
    1204:	e4 0b       	sbc	r30, r20
    1206:	f5 0b       	sbc	r31, r21

00001208 <__udivmodsi4_ep>:
    1208:	66 1f       	adc	r22, r22
    120a:	77 1f       	adc	r23, r23
    120c:	88 1f       	adc	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	1a 94       	dec	r1
    1212:	69 f7       	brne	.-38     	; 0x11ee <__udivmodsi4_loop>
    1214:	60 95       	com	r22
    1216:	70 95       	com	r23
    1218:	80 95       	com	r24
    121a:	90 95       	com	r25
    121c:	9b 01       	movw	r18, r22
    121e:	ac 01       	movw	r20, r24
    1220:	bd 01       	movw	r22, r26
    1222:	cf 01       	movw	r24, r30
    1224:	08 95       	ret

00001226 <__muluhisi3>:
    1226:	0e 94 1e 09 	call	0x123c	; 0x123c <__umulhisi3>
    122a:	a5 9f       	mul	r26, r21
    122c:	90 0d       	add	r25, r0
    122e:	b4 9f       	mul	r27, r20
    1230:	90 0d       	add	r25, r0
    1232:	a4 9f       	mul	r26, r20
    1234:	80 0d       	add	r24, r0
    1236:	91 1d       	adc	r25, r1
    1238:	11 24       	eor	r1, r1
    123a:	08 95       	ret

0000123c <__umulhisi3>:
    123c:	a2 9f       	mul	r26, r18
    123e:	b0 01       	movw	r22, r0
    1240:	b3 9f       	mul	r27, r19
    1242:	c0 01       	movw	r24, r0
    1244:	a3 9f       	mul	r26, r19
    1246:	70 0d       	add	r23, r0
    1248:	81 1d       	adc	r24, r1
    124a:	11 24       	eor	r1, r1
    124c:	91 1d       	adc	r25, r1
    124e:	b2 9f       	mul	r27, r18
    1250:	70 0d       	add	r23, r0
    1252:	81 1d       	adc	r24, r1
    1254:	11 24       	eor	r1, r1
    1256:	91 1d       	adc	r25, r1
    1258:	08 95       	ret

0000125a <strlen>:
    125a:	fc 01       	movw	r30, r24
    125c:	01 90       	ld	r0, Z+
    125e:	00 20       	and	r0, r0
    1260:	e9 f7       	brne	.-6      	; 0x125c <strlen+0x2>
    1262:	80 95       	com	r24
    1264:	90 95       	com	r25
    1266:	8e 0f       	add	r24, r30
    1268:	9f 1f       	adc	r25, r31
    126a:	08 95       	ret

0000126c <itoa>:
    126c:	45 32       	cpi	r20, 0x25	; 37
    126e:	51 05       	cpc	r21, r1
    1270:	20 f4       	brcc	.+8      	; 0x127a <itoa+0xe>
    1272:	42 30       	cpi	r20, 0x02	; 2
    1274:	10 f0       	brcs	.+4      	; 0x127a <itoa+0xe>
    1276:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__itoa_ncheck>
    127a:	fb 01       	movw	r30, r22
    127c:	10 82       	st	Z, r1
    127e:	cb 01       	movw	r24, r22
    1280:	08 95       	ret

00001282 <__itoa_ncheck>:
    1282:	bb 27       	eor	r27, r27
    1284:	4a 30       	cpi	r20, 0x0A	; 10
    1286:	31 f4       	brne	.+12     	; 0x1294 <__itoa_ncheck+0x12>
    1288:	99 23       	and	r25, r25
    128a:	22 f4       	brpl	.+8      	; 0x1294 <__itoa_ncheck+0x12>
    128c:	bd e2       	ldi	r27, 0x2D	; 45
    128e:	90 95       	com	r25
    1290:	81 95       	neg	r24
    1292:	9f 4f       	sbci	r25, 0xFF	; 255
    1294:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__utoa_common>

00001298 <__utoa_ncheck>:
    1298:	bb 27       	eor	r27, r27

0000129a <__utoa_common>:
    129a:	fb 01       	movw	r30, r22
    129c:	55 27       	eor	r21, r21
    129e:	aa 27       	eor	r26, r26
    12a0:	88 0f       	add	r24, r24
    12a2:	99 1f       	adc	r25, r25
    12a4:	aa 1f       	adc	r26, r26
    12a6:	a4 17       	cp	r26, r20
    12a8:	10 f0       	brcs	.+4      	; 0x12ae <__utoa_common+0x14>
    12aa:	a4 1b       	sub	r26, r20
    12ac:	83 95       	inc	r24
    12ae:	50 51       	subi	r21, 0x10	; 16
    12b0:	b9 f7       	brne	.-18     	; 0x12a0 <__utoa_common+0x6>
    12b2:	a0 5d       	subi	r26, 0xD0	; 208
    12b4:	aa 33       	cpi	r26, 0x3A	; 58
    12b6:	08 f0       	brcs	.+2      	; 0x12ba <__utoa_common+0x20>
    12b8:	a9 5d       	subi	r26, 0xD9	; 217
    12ba:	a1 93       	st	Z+, r26
    12bc:	00 97       	sbiw	r24, 0x00	; 0
    12be:	79 f7       	brne	.-34     	; 0x129e <__utoa_common+0x4>
    12c0:	b1 11       	cpse	r27, r1
    12c2:	b1 93       	st	Z+, r27
    12c4:	11 92       	st	Z+, r1
    12c6:	cb 01       	movw	r24, r22
    12c8:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <strrev>

000012cc <strrev>:
    12cc:	dc 01       	movw	r26, r24
    12ce:	fc 01       	movw	r30, r24
    12d0:	67 2f       	mov	r22, r23
    12d2:	71 91       	ld	r23, Z+
    12d4:	77 23       	and	r23, r23
    12d6:	e1 f7       	brne	.-8      	; 0x12d0 <strrev+0x4>
    12d8:	32 97       	sbiw	r30, 0x02	; 2
    12da:	04 c0       	rjmp	.+8      	; 0x12e4 <strrev+0x18>
    12dc:	7c 91       	ld	r23, X
    12de:	6d 93       	st	X+, r22
    12e0:	70 83       	st	Z, r23
    12e2:	62 91       	ld	r22, -Z
    12e4:	ae 17       	cp	r26, r30
    12e6:	bf 07       	cpc	r27, r31
    12e8:	c8 f3       	brcs	.-14     	; 0x12dc <strrev+0x10>
    12ea:	08 95       	ret

000012ec <_exit>:
    12ec:	f8 94       	cli

000012ee <__stop_program>:
    12ee:	ff cf       	rjmp	.-2      	; 0x12ee <__stop_program>
